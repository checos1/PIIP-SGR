@using  DNP.Backbone.Dominio.Dto.UsuarioNotificacion;
@model  List<UsuarioNotificacionConfigDto>
@{
    Layout = null;
    ViewBag.Title = "Lista de Notificaciones de Mantenimiento";

    // constante: diccionario de datos para determinar la propiedad asociada a la columna
    var columnaPropiedades = new Dictionary<String, String> {
        { "Nombre notificacion", "NombreNotificacion"},
        { "Fecha y hora inicio", "FechaInicio"}   ,
        { "Fecha y hora final", "FechaFin" },
        { "Tipo", "Tipo"}
    };
}

<html>
    <head>
        @Html.Partial("_IncludeEstilosRelatorios")
    </head>

    <body class="pdf">
        @Html.Partial("_CabecalhoRelatorio", "Informe de Mantenimiento de Notificaciones")

        <div class="mt-5">
            @if (Model.Count == 0)
            {

                <table class="table table-sm table-borderless">
                    <thead>
                        <tr>
                            <th class="text-center">
                                No hubo registros para los filtros seleccionados.
                            </th>
                        </tr>
                    </thead>
                </table>
            }
            else { 
               <div id="containerbody">
                   <table class="table  table-borderless border-table">
                       <thead>
                           <tr>
                               @foreach (var columna in columnaPropiedades.Select(p => p.Key).ToList())
                               {
                                   <th>@columna</th>
                               }
                           </tr>
                       </thead>
                       <tbody>
                           @foreach (var notificacion in Model)
                           {

                               var columnasValor = notificacion.GetType().GetProperties()
                                                                      .Select((p, index) => new
                                                                      {
                                                                          Index = index,
                                                                          Propiedad = p.Name,
                                                                          Valor = p.GetValue(notificacion)
                                                                      }).ToList();

                               var columnasPropiedadesLista = columnaPropiedades.Select(p => p.Value).ToList();
                               columnasValor                = columnasValor.Where(p => columnasPropiedadesLista.Contains(p.Propiedad)).Select(p => new
                               {
                                   Index = columnasPropiedadesLista.IndexOf(p.Propiedad),
                                   p.Propiedad,
                                   p.Valor
                               }).OrderBy(p => p.Index).ToList();

                               <tr>
                                   @foreach (var columna in columnasValor)
                                   {
                                       <td>@columna.Valor</td>

                                   }
                               </tr>
                           }
                       </tbody>
                   </table>
                </div>
            }
        </div>
    </body>
</html>
