//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DNP.ServiciosNegocio.Persistencia.Modelo_OnlySP
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelOnlySPEntities : DbContext
    {
        public ModelOnlySPEntities()
            : base("name=ModelOnlySPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<int>> uspGetTramiteAjusteEnPasoUno(Nullable<int> tramiteId, Nullable<int> proyectoId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetTramiteAjusteEnPasoUno", tramiteIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetValoresUtilizadosPorProducto(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<System.Guid> instanciaId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetValoresUtilizadosPorProducto", tramiteIdParameter, proyectoIdParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetPreguntasAvanceFinanciero(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, string bpin, Nullable<System.Guid> nivelId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var bpinParameter = bpin != null ?
                new ObjectParameter("Bpin", bpin) :
                new ObjectParameter("Bpin", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPreguntasAvanceFinanciero", instanciaIdParameter, proyectoIdParameter, bpinParameter, nivelIdParameter);
        }
    
        public virtual int uspPostPreguntasAvanceFinanciero(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPreguntasAvanceFinanciero", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetAvanceFinanciero(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, string bpin, Nullable<int> vigenciaId, Nullable<int> periodoPeriodicidadId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var bpinParameter = bpin != null ?
                new ObjectParameter("Bpin", bpin) :
                new ObjectParameter("Bpin", typeof(string));
    
            var vigenciaIdParameter = vigenciaId.HasValue ?
                new ObjectParameter("VigenciaId", vigenciaId) :
                new ObjectParameter("VigenciaId", typeof(int));
    
            var periodoPeriodicidadIdParameter = periodoPeriodicidadId.HasValue ?
                new ObjectParameter("PeriodoPeriodicidadId", periodoPeriodicidadId) :
                new ObjectParameter("PeriodoPeriodicidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetAvanceFinanciero", instanciaIdParameter, proyectoIdParameter, bpinParameter, vigenciaIdParameter, periodoPeriodicidadIdParameter);
        }
    
        public virtual int uspPostAvanceFinanciero(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAvanceFinanciero", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> UspGetProyectosASelecionar(Nullable<System.Guid> flujoid, string entidades, Nullable<int> tipoTramiteId)
        {
            var flujoidParameter = flujoid.HasValue ?
                new ObjectParameter("flujoid", flujoid) :
                new ObjectParameter("flujoid", typeof(System.Guid));
    
            var entidadesParameter = entidades != null ?
                new ObjectParameter("Entidades", entidades) :
                new ObjectParameter("Entidades", typeof(string));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("tipoTramiteId", tipoTramiteId) :
                new ObjectParameter("tipoTramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetProyectosASelecionar", flujoidParameter, entidadesParameter, tipoTramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetCalendarioPeriodo_Result> uspGetCalendarioPeriodo(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCalendarioPeriodo_Result>("uspGetCalendarioPeriodo", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetProyectosCredito_Result> uspGetProyectosCredito(string tipoEntidad, Nullable<int> entidadId, Nullable<System.Guid> idFlujoParametro, string bpin, string nombreProyecto)
        {
            var tipoEntidadParameter = tipoEntidad != null ?
                new ObjectParameter("tipoEntidad", tipoEntidad) :
                new ObjectParameter("tipoEntidad", typeof(string));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            var idFlujoParametroParameter = idFlujoParametro.HasValue ?
                new ObjectParameter("idFlujoParametro", idFlujoParametro) :
                new ObjectParameter("idFlujoParametro", typeof(System.Guid));
    
            var bpinParameter = bpin != null ?
                new ObjectParameter("bpin", bpin) :
                new ObjectParameter("bpin", typeof(string));
    
            var nombreProyectoParameter = nombreProyecto != null ?
                new ObjectParameter("nombreProyecto", nombreProyecto) :
                new ObjectParameter("nombreProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectosCredito_Result>("uspGetProyectosCredito", tipoEntidadParameter, entidadIdParameter, idFlujoParametroParameter, bpinParameter, nombreProyectoParameter);
        }
    
        public virtual ObjectResult<uspGetProyectosContracredito_Result> uspGetProyectosContracredito(string tipoEntidad, Nullable<int> entidadId, Nullable<System.Guid> idFlujoParametro, Nullable<int> idEntidadFiltro, string bpin, string nombreProyecto)
        {
            var tipoEntidadParameter = tipoEntidad != null ?
                new ObjectParameter("tipoEntidad", tipoEntidad) :
                new ObjectParameter("tipoEntidad", typeof(string));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            var idFlujoParametroParameter = idFlujoParametro.HasValue ?
                new ObjectParameter("idFlujoParametro", idFlujoParametro) :
                new ObjectParameter("idFlujoParametro", typeof(System.Guid));
    
            var idEntidadFiltroParameter = idEntidadFiltro.HasValue ?
                new ObjectParameter("idEntidadFiltro", idEntidadFiltro) :
                new ObjectParameter("idEntidadFiltro", typeof(int));
    
            var bpinParameter = bpin != null ?
                new ObjectParameter("bpin", bpin) :
                new ObjectParameter("bpin", typeof(string));
    
            var nombreProyectoParameter = nombreProyecto != null ?
                new ObjectParameter("nombreProyecto", nombreProyecto) :
                new ObjectParameter("nombreProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectosContracredito_Result>("uspGetProyectosContracredito", tipoEntidadParameter, entidadIdParameter, idFlujoParametroParameter, idEntidadFiltroParameter, bpinParameter, nombreProyectoParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerEntidadesTramite_Result> uspGetObtenerEntidadesTramite(string numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite != null ?
                new ObjectParameter("NumeroTramite", numeroTramite) :
                new ObjectParameter("NumeroTramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerEntidadesTramite_Result>("uspGetObtenerEntidadesTramite", numeroTramiteParameter);
        }
    
        public virtual int UspPostEditarActividadReporteSeguimientoPeriodosValores(string usuario, Nullable<int> proyectoId, string jsonActividades, string jsonCosto, Nullable<int> actividadId, Nullable<int> actividadSeguimientoId, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var jsonActividadesParameter = jsonActividades != null ?
                new ObjectParameter("jsonActividades", jsonActividades) :
                new ObjectParameter("jsonActividades", typeof(string));
    
            var jsonCostoParameter = jsonCosto != null ?
                new ObjectParameter("jsonCosto", jsonCosto) :
                new ObjectParameter("jsonCosto", typeof(string));
    
            var actividadIdParameter = actividadId.HasValue ?
                new ObjectParameter("actividadId", actividadId) :
                new ObjectParameter("actividadId", typeof(int));
    
            var actividadSeguimientoIdParameter = actividadSeguimientoId.HasValue ?
                new ObjectParameter("actividadSeguimientoId", actividadSeguimientoId) :
                new ObjectParameter("actividadSeguimientoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostEditarActividadReporteSeguimientoPeriodosValores", usuarioParameter, proyectoIdParameter, jsonActividadesParameter, jsonCostoParameter, actividadIdParameter, actividadSeguimientoIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetAvanceMetaProducto_JSON(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, string bpin, Nullable<int> vigenciaId, Nullable<int> periodoPeriodicidadId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var bpinParameter = bpin != null ?
                new ObjectParameter("Bpin", bpin) :
                new ObjectParameter("Bpin", typeof(string));
    
            var vigenciaIdParameter = vigenciaId.HasValue ?
                new ObjectParameter("VigenciaId", vigenciaId) :
                new ObjectParameter("VigenciaId", typeof(int));
    
            var periodoPeriodicidadIdParameter = periodoPeriodicidadId.HasValue ?
                new ObjectParameter("PeriodoPeriodicidadId", periodoPeriodicidadId) :
                new ObjectParameter("PeriodoPeriodicidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetAvanceMetaProducto_JSON", instanciaIdParameter, proyectoIdParameter, bpinParameter, vigenciaIdParameter, periodoPeriodicidadIdParameter);
        }
    
        public virtual int uspPostActualizarAvanceMetaProducto(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizarAvanceMetaProducto", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspPostActualizarLiberacionVFProducto(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostActualizarLiberacionVFProducto", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostEliminarLiberacionVF(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEliminarLiberacionVF", tramiteIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspPostLiberacionVF(Nullable<int> tramiteProyectoId, Nullable<int> tramiteLiberarId, string creadoPor, Nullable<System.DateTime> vigenciaDesde, Nullable<System.DateTime> vigenciaHasta, ObjectParameter errorValidacionNegocio)
        {
            var tramiteProyectoIdParameter = tramiteProyectoId.HasValue ?
                new ObjectParameter("TramiteProyectoId", tramiteProyectoId) :
                new ObjectParameter("TramiteProyectoId", typeof(int));
    
            var tramiteLiberarIdParameter = tramiteLiberarId.HasValue ?
                new ObjectParameter("TramiteLiberarId", tramiteLiberarId) :
                new ObjectParameter("TramiteLiberarId", typeof(int));
    
            var creadoPorParameter = creadoPor != null ?
                new ObjectParameter("CreadoPor", creadoPor) :
                new ObjectParameter("CreadoPor", typeof(string));
    
            var vigenciaDesdeParameter = vigenciaDesde.HasValue ?
                new ObjectParameter("VigenciaDesde", vigenciaDesde) :
                new ObjectParameter("VigenciaDesde", typeof(System.DateTime));
    
            var vigenciaHastaParameter = vigenciaHasta.HasValue ?
                new ObjectParameter("VigenciaHasta", vigenciaHasta) :
                new ObjectParameter("VigenciaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspPostLiberacionVF", tramiteProyectoIdParameter, tramiteLiberarIdParameter, creadoPorParameter, vigenciaDesdeParameter, vigenciaHastaParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<UspGetObtenerUsuariosPorInstanciaPadre_Result> UspGetObtenerUsuariosPorInstanciaPadre(Nullable<System.Guid> instanciaId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetObtenerUsuariosPorInstanciaPadre_Result>("UspGetObtenerUsuariosPorInstanciaPadre", instanciaIdParameter);
        }
    
        public virtual int uspPostProgramarProductos(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostProgramarProductos", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetRegionalizacionProgramacionSeguimiento_JSON(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, string bpin, Nullable<int> vigenciaId, Nullable<int> periodoPeriodicidadId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var bpinParameter = bpin != null ?
                new ObjectParameter("Bpin", bpin) :
                new ObjectParameter("Bpin", typeof(string));
    
            var vigenciaIdParameter = vigenciaId.HasValue ?
                new ObjectParameter("VigenciaId", vigenciaId) :
                new ObjectParameter("VigenciaId", typeof(int));
    
            var periodoPeriodicidadIdParameter = periodoPeriodicidadId.HasValue ?
                new ObjectParameter("PeriodoPeriodicidadId", periodoPeriodicidadId) :
                new ObjectParameter("PeriodoPeriodicidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetRegionalizacionProgramacionSeguimiento_JSON", instanciaIdParameter, proyectoIdParameter, bpinParameter, vigenciaIdParameter, periodoPeriodicidadIdParameter);
        }
    
        public virtual int uspPostRegionalizacionProgramacionSeguimiento(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostRegionalizacionProgramacionSeguimiento", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetDatosIncorporacion(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetDatosIncorporacion", tramiteIdParameter);
        }
    
        public virtual int uspPostDatosIncorporacion(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostDatosIncorporacion", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostEliminarDatosIncorporacion(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEliminarDatosIncorporacion", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetPresupuestalProyectosAsociados(Nullable<int> tramiteId, Nullable<System.Guid> instanciaId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPresupuestalProyectosAsociados", tramiteIdParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<UspGetErroresSeguimiento_Result> UspGetErroresSeguimiento(Nullable<System.Guid> guidMacroproceso, Nullable<System.Guid> instanciaId, Nullable<int> proyectoId)
        {
            var guidMacroprocesoParameter = guidMacroproceso.HasValue ?
                new ObjectParameter("GuidMacroproceso", guidMacroproceso) :
                new ObjectParameter("GuidMacroproceso", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetErroresSeguimiento_Result>("UspGetErroresSeguimiento", guidMacroprocesoParameter, instanciaIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetPermisosAccionPaso_JSON(Nullable<System.Guid> idInstancia, Nullable<System.Guid> idAcccion, string objetoNegocioId, string usuarioDNP, string objetoJson)
        {
            var idInstanciaParameter = idInstancia.HasValue ?
                new ObjectParameter("IdInstancia", idInstancia) :
                new ObjectParameter("IdInstancia", typeof(System.Guid));
    
            var idAcccionParameter = idAcccion.HasValue ?
                new ObjectParameter("IdAcccion", idAcccion) :
                new ObjectParameter("IdAcccion", typeof(System.Guid));
    
            var objetoNegocioIdParameter = objetoNegocioId != null ?
                new ObjectParameter("ObjetoNegocioId", objetoNegocioId) :
                new ObjectParameter("ObjetoNegocioId", typeof(string));
    
            var usuarioDNPParameter = usuarioDNP != null ?
                new ObjectParameter("UsuarioDNP", usuarioDNP) :
                new ObjectParameter("UsuarioDNP", typeof(string));
    
            var objetoJsonParameter = objetoJson != null ?
                new ObjectParameter("ObjetoJson", objetoJson) :
                new ObjectParameter("ObjetoJson", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPermisosAccionPaso_JSON", idInstanciaParameter, idAcccionParameter, objetoNegocioIdParameter, usuarioDNPParameter, objetoJsonParameter);
        }
    
        public virtual ObjectResult<string> uspGetResumenRegionalizacionSeguimiento_JSON(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, string bpin)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var bpinParameter = bpin != null ?
                new ObjectParameter("Bpin", bpin) :
                new ObjectParameter("Bpin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetResumenRegionalizacionSeguimiento_JSON", instanciaIdParameter, proyectoIdParameter, bpinParameter);
        }
    
        public virtual ObjectResult<string> uspGetOrigenRecursos(Nullable<int> idTramite)
        {
            var idTramiteParameter = idTramite.HasValue ?
                new ObjectParameter("IdTramite", idTramite) :
                new ObjectParameter("IdTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetOrigenRecursos", idTramiteParameter);
        }
    
        public virtual ObjectResult<string> uspGetIndicadoresPoliticas_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetIndicadoresPoliticas_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> uspPostSetOrigenRecursos(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostSetOrigenRecursos", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int UspPostEditarIndicadorPoliticasSeguimientoPeriodosValores(string usuario, Nullable<int> proyectoId, Nullable<int> politicaId, Nullable<int> fuenteId, Nullable<int> dimensionId, Nullable<int> localizacionId, string json, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("politicaId", politicaId) :
                new ObjectParameter("politicaId", typeof(int));
    
            var fuenteIdParameter = fuenteId.HasValue ?
                new ObjectParameter("fuenteId", fuenteId) :
                new ObjectParameter("fuenteId", typeof(int));
    
            var dimensionIdParameter = dimensionId.HasValue ?
                new ObjectParameter("dimensionId", dimensionId) :
                new ObjectParameter("dimensionId", typeof(int));
    
            var localizacionIdParameter = localizacionId.HasValue ?
                new ObjectParameter("localizacionId", localizacionId) :
                new ObjectParameter("localizacionId", typeof(int));
    
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostEditarIndicadorPoliticasSeguimientoPeriodosValores", usuarioParameter, proyectoIdParameter, politicaIdParameter, fuenteIdParameter, dimensionIdParameter, localizacionIdParameter, jsonParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetSystemConfiguracion_JSON(string variableKey, string separador)
        {
            var variableKeyParameter = variableKey != null ?
                new ObjectParameter("VariableKey", variableKey) :
                new ObjectParameter("VariableKey", typeof(string));
    
            var separadorParameter = separador != null ?
                new ObjectParameter("Separador", separador) :
                new ObjectParameter("Separador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetSystemConfiguracion_JSON", variableKeyParameter, separadorParameter);
        }
    
        public virtual ObjectResult<string> uspGetPresupuestalProyectosAsociados_Adicion(Nullable<int> tramiteId, Nullable<System.Guid> instanciaId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPresupuestalProyectosAsociados_Adicion", tramiteIdParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetFocalizacionProgramacionSeguimiento_JSON(string json)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("Json", json) :
                new ObjectParameter("Json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetFocalizacionProgramacionSeguimiento_JSON", jsonParameter);
        }
    
        public virtual int uspPostProductoCategoriaSeguimiento(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostProductoCategoriaSeguimiento", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetCrucePoliticasSeguimiento_JSON(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCrucePoliticasSeguimiento_JSON", instanciaIdParameter, proyectoIdParameter);
        }
    
        public virtual int uspPostCrucePoliticasSeguimiento(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCrucePoliticasSeguimiento", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetResumenReprogramacionPorProductoVigencia_JSON(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetResumenReprogramacionPorProductoVigencia_JSON", instanciaIdParameter, proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetResumenReprogramacionPorVigencia_JSON(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetResumenReprogramacionPorVigencia_JSON", instanciaIdParameter, proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetObtenerModalidadContratacionVigenciasFuturas(Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetObtenerModalidadContratacionVigenciasFuturas", proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual int uspPostReprogramacionPorProductoVigencia(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostReprogramacionPorProductoVigencia", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostReprogramacionPorVigencia(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostReprogramacionPorVigencia", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetObtenerAutorizacionAsociada_Result> uspGetObtenerAutorizacionAsociada(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerAutorizacionAsociada_Result>("uspGetObtenerAutorizacionAsociada", tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerAutorizacionesParaReprogramacion_Result> uspGetObtenerAutorizacionesParaReprogramacion(string codbpin, Nullable<int> tramiteId)
        {
            var codbpinParameter = codbpin != null ?
                new ObjectParameter("codbpin", codbpin) :
                new ObjectParameter("codbpin", typeof(string));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerAutorizacionesParaReprogramacion_Result>("uspGetObtenerAutorizacionesParaReprogramacion", codbpinParameter, tramiteIdParameter);
        }
    
        public virtual int uspPostEliminarAsociacionReprogramacion(Nullable<int> id, Nullable<int> autorizacionVigenciasFuturasId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var autorizacionVigenciasFuturasIdParameter = autorizacionVigenciasFuturasId.HasValue ?
                new ObjectParameter("AutorizacionVigenciasFuturasId", autorizacionVigenciasFuturasId) :
                new ObjectParameter("AutorizacionVigenciasFuturasId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEliminarAsociacionReprogramacion", idParameter, autorizacionVigenciasFuturasIdParameter);
        }
    
        public virtual int UspGetValidarCalendario(Nullable<int> entityTypeCatalogOptionId, Nullable<System.Guid> nivelId, Nullable<int> seccionCapituloId, ObjectParameter result)
        {
            var entityTypeCatalogOptionIdParameter = entityTypeCatalogOptionId.HasValue ?
                new ObjectParameter("EntityTypeCatalogOptionId", entityTypeCatalogOptionId) :
                new ObjectParameter("EntityTypeCatalogOptionId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var seccionCapituloIdParameter = seccionCapituloId.HasValue ?
                new ObjectParameter("SeccionCapituloId", seccionCapituloId) :
                new ObjectParameter("SeccionCapituloId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspGetValidarCalendario", entityTypeCatalogOptionIdParameter, nivelIdParameter, seccionCapituloIdParameter, result);
        }
    
        public virtual ObjectResult<string> uspGetProgramacionProyectosSinPresupuestal(Nullable<int> sectorId, Nullable<int> entidadId, string proyectoId)
        {
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("sectorId", sectorId) :
                new ObjectParameter("sectorId", typeof(int));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            var proyectoIdParameter = !string.IsNullOrWhiteSpace(proyectoId) ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProgramacionProyectosSinPresupuestal", sectorIdParameter, entidadIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetCargaMasivaCuotas(Nullable<int> vigencia, Nullable<int> entityTypeCatalogOptionId)
        {
            var vigenciaParameter = vigencia.HasValue ?
                new ObjectParameter("Vigencia", vigencia) :
                new ObjectParameter("Vigencia", typeof(int));
    
            var entityTypeCatalogOptionIdParameter = entityTypeCatalogOptionId.HasValue ?
                new ObjectParameter("EntityTypeCatalogOptionId", entityTypeCatalogOptionId) :
                new ObjectParameter("EntityTypeCatalogOptionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetCargaMasivaCuotas", vigenciaParameter, entityTypeCatalogOptionIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetProgramacionSectores(Nullable<int> sectorId)
        {
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("sectorId", sectorId) :
                new ObjectParameter("sectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProgramacionSectores", sectorIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetProgramacionEntidadesSector(Nullable<int> sectorId)
        {
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("sectorId", sectorId) :
                new ObjectParameter("sectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProgramacionEntidadesSector", sectorIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetCalendarioProgramacion(Nullable<System.Guid> flujoId)
        {
            var flujoIdParameter = flujoId.HasValue ?
                new ObjectParameter("FlujoId", flujoId) :
                new ObjectParameter("FlujoId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetCalendarioProgramacion", flujoIdParameter);
        }
    
        public virtual int UspPostCargaMasivaCreditos(string json, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostCargaMasivaCreditos", jsonParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> UspGetCargaMasivaCreditos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetCargaMasivaCreditos");
        }
    
        public virtual ObjectResult<string> UspGetDetalleDesagregarRegionalizacion_Ajustes_JSON(string json)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetDetalleDesagregarRegionalizacion_Ajustes_JSON", jsonParameter);
        }
    
        public virtual int uspPostProgramaciondistribucion(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostProgramaciondistribucion", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetDetalleFocalizacionProgramacionSeguimiento_JSON(string json)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetDetalleFocalizacionProgramacionSeguimiento_JSON", jsonParameter);
        }
    
        public virtual ObjectResult<string> upsGetJustificacionProyectosBeneficiarios_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("upsGetJustificacionProyectosBeneficiarios_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetProyectosTramiteNegocio_Result> uspGetProyectosTramiteNegocio(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectosTramiteNegocio_Result>("uspGetProyectosTramiteNegocio", tramiteIdParameter);
        }
        
        public virtual ObjectResult<string> upsGetProyectosBeneficiariosDetalle_JSON(string json)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("Json", json) :
                new ObjectParameter("Json", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("upsGetProyectosBeneficiariosDetalle_JSON", jsonParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerEntidadDestinoResponsableFlujoSgp_Result> uspGetObtenerEntidadDestinoResponsableFlujoSgp(Nullable<System.Guid> rolId, Nullable<int> crTypeId, Nullable<int> entidadResponsableId, Nullable<int> proyectoId)
        {
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(System.Guid));
    
            var crTypeIdParameter = crTypeId.HasValue ?
                new ObjectParameter("CrTypeId", crTypeId) :
                new ObjectParameter("CrTypeId", typeof(int));
    
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));

            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerEntidadDestinoResponsableFlujoSgp_Result>("uspGetObtenerEntidadDestinoResponsableFlujoSgp", rolIdParameter, crTypeIdParameter, entidadResponsableIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerEntidadDestinoResponsableFlujoTramiteSgp_Result> uspGetObtenerEntidadDestinoResponsableFlujoTramiteSgp(Nullable<System.Guid> rolId, Nullable<int> entidadResponsableId, Nullable<int> tramiteId)
        {
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(System.Guid));
    
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerEntidadDestinoResponsableFlujoTramiteSgp_Result>("uspGetObtenerEntidadDestinoResponsableFlujoTramiteSgp", rolIdParameter, entidadResponsableIdParameter, tramiteIdParameter);
        }
    }
}
