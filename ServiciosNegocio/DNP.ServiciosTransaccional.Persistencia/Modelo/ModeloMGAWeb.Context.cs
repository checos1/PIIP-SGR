//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DNP.ServiciosTransaccional.Persistencia.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MGAWebContextoTransaccional : DbContext
    {
        public MGAWebContextoTransaccional()
            : base("name=MGAWebContextoTransaccional")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<SystemConfigurations> SystemConfigurations { get; set; }


        public virtual int uspPostIdentificarEntidadDestino(Nullable<decimal> projectId, ObjectParameter entidadDestino, ObjectParameter entidadDestinoId, ObjectParameter errorValidacionNegocio)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostIdentificarEntidadDestino", projectIdParameter, entidadDestino, entidadDestinoId, errorValidacionNegocio);
        }
    
        public virtual int uspValidaciones(Nullable<decimal> proyectoId, ObjectParameter exitoso)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspValidaciones", proyectoIdParameter, exitoso);
        }
    
        public virtual int uspPostCambioEstadoProyecto(string bPIN, Nullable<System.Guid> nivelId, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCambioEstadoProyecto", bPINParameter, nivelIdParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostGeneraBpin(Nullable<decimal> proyectoId, ObjectParameter exitoso)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostGeneraBpin", proyectoIdParameter, exitoso);
        }
    
        public virtual int uspPostMergeAplicarMga(Nullable<int> proyectoId, string usuario, ObjectParameter exitoso)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostMergeAplicarMga", proyectoIdParameter, usuarioParameter, exitoso);
        }
    
        public virtual ObjectResult<uspGetDatosCartaConcepto_Result> uspGetDatosCartaConcepto(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosCartaConcepto_Result>("uspGetDatosCartaConcepto", tramiteIdParameter);
        }
    
        public virtual int upsGetTramiteEnvioSubDireccion(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("upsGetTramiteEnvioSubDireccion", tramiteIdParameter);
        }
    
        public virtual int UspPostActualizarRadicadoCarta(Nullable<int> tramiteId, string radicadoEntrada, string radicadoSalida, string usuario, string expedienteId, ObjectParameter errorValidacionNegocio)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var radicadoEntradaParameter = radicadoEntrada != null ?
                new ObjectParameter("radicadoEntrada", radicadoEntrada) :
                new ObjectParameter("radicadoEntrada", typeof(string));
    
            var radicadoSalidaParameter = radicadoSalida != null ?
                new ObjectParameter("radicadoSalida", radicadoSalida) :
                new ObjectParameter("radicadoSalida", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var expedienteIdParameter = expedienteId != null ?
                new ObjectParameter("expedienteId", expedienteId) :
                new ObjectParameter("expedienteId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostActualizarRadicadoCarta", tramiteIdParameter, radicadoEntradaParameter, radicadoSalidaParameter, usuarioParameter, expedienteIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<upsGetTramiteEnvioSubDireccion1_Result> upsGetTramiteEnvioSubDireccion1(Nullable<int> tramiteId, string usuario)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<upsGetTramiteEnvioSubDireccion1_Result>("upsGetTramiteEnvioSubDireccion1", tramiteIdParameter, usuarioParameter);
        }
    
        public virtual int uspGetProyectosTramiteNegocio(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetProyectosTramiteNegocio", tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetProyectosTramite_Result> uspGetProyectosTramite(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectosTramite_Result>("uspGetProyectosTramite", tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetDetalleCartaConcepto_Result> uspGetDetalleCartaConcepto(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDetalleCartaConcepto_Result>("uspGetDetalleCartaConcepto", tramiteIdParameter);
        }
    
        public virtual int uspPostActualizarNombreProyecto(string bPIN, Nullable<System.Guid> nivelId, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizarNombreProyecto", bPINParameter, nivelIdParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetAnalistaResponsablePorSector_Result> uspGetAnalistaResponsablePorSector(Nullable<decimal> sectorId)
        {
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("sectorId", sectorId) :
                new ObjectParameter("sectorId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAnalistaResponsablePorSector_Result>("uspGetAnalistaResponsablePorSector", sectorIdParameter);
        }
    
        public virtual ObjectResult<string> uspPostEliminarMarcaPervioVigencia_Proyectos(string bPIN, string vigencia)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var vigenciaParameter = vigencia != null ?
                new ObjectParameter("vigencia", vigencia) :
                new ObjectParameter("vigencia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostEliminarMarcaPervioVigencia_Proyectos", bPINParameter, vigenciaParameter);
        }
    
        public virtual int uspPostActualizarCargueMasivo(string objetoNegocioId, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var objetoNegocioIdParameter = objetoNegocioId != null ?
                new ObjectParameter("ObjetoNegocioId", objetoNegocioId) :
                new ObjectParameter("ObjetoNegocioId", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizarCargueMasivo", objetoNegocioIdParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetConsultarCargueExcel_JSON(string objetoNegocioId)
        {
            var objetoNegocioIdParameter = objetoNegocioId != null ?
                new ObjectParameter("ObjetoNegocioId", objetoNegocioId) :
                new ObjectParameter("ObjetoNegocioId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetConsultarCargueExcel_JSON", objetoNegocioIdParameter);
        }
    
        public virtual ObjectResult<UspGetObtenerUsuariosPorInstanciaPadre_Result> UspGetObtenerUsuariosPorInstanciaPadre(Nullable<System.Guid> instanciaId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetObtenerUsuariosPorInstanciaPadre_Result>("UspGetObtenerUsuariosPorInstanciaPadre", instanciaIdParameter);
        }
    
        public virtual ObjectResult<uspGetDatosMarcaPervioVigencia_Proyectos_Result> uspGetDatosMarcaPervioVigencia_Proyectos(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosMarcaPervioVigencia_Proyectos_Result>("uspGetDatosMarcaPervioVigencia_Proyectos", bPINParameter);
        }
    
        public virtual int uspPostActualizaCampoRemitenteConcepto(Nullable<int> tramiteId, string usuarioDNPremitente)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var usuarioDNPremitenteParameter = usuarioDNPremitente != null ?
                new ObjectParameter("usuarioDNPremitente", usuarioDNPremitente) :
                new ObjectParameter("usuarioDNPremitente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaCampoRemitenteConcepto", tramiteIdParameter, usuarioDNPremitenteParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerDetalleTramite_Result> uspGetObtenerDetalleTramite(string numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite != null ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerDetalleTramite_Result>("uspGetObtenerDetalleTramite", numeroTramiteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetDependenciaByOrfeoEntidadId(Nullable<int> orfeoEntidadId)
        {
            var orfeoEntidadIdParameter = orfeoEntidadId.HasValue ?
                new ObjectParameter("OrfeoEntidadId", orfeoEntidadId) :
                new ObjectParameter("OrfeoEntidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetDependenciaByOrfeoEntidadId", orfeoEntidadIdParameter);
        }
    }
}
