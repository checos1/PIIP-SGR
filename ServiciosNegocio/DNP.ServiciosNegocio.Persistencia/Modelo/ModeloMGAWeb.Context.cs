//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DNP.ServiciosNegocio.Persistencia.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MGAWebContexto : DbContext
    {
        public MGAWebContexto()
            : base("name=MGAWebContexto")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<RecursosValore> RecursosValores { get; set; }
        public virtual DbSet<AtributosEntidad> AtributosEntidad { get; set; }
        public virtual DbSet<EntityTypeCatalogOption> EntityTypeCatalogOption { get; set; }
        public virtual DbSet<Alternative> Alternative { get; set; }
        public virtual DbSet<ClassificationType> ClassificationType { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<EntityType> EntityType { get; set; }
        public virtual DbSet<Municipality> Municipality { get; set; }
        public virtual DbSet<ProductCatalog> ProductCatalog { get; set; }
        public virtual DbSet<Program> Program { get; set; }
        public virtual DbSet<Region> Region { get; set; }
        public virtual DbSet<Sector> Sector { get; set; }
        public virtual DbSet<Shelter> Shelter { get; set; }
        public virtual DbSet<Stage> Stage { get; set; }
        public virtual DbSet<Bienio> Bienio { get; set; }
        public virtual DbSet<VGetCRType> VGetCRType { get; set; }
        public virtual DbSet<VGetFase> VGetFase { get; set; }
        public virtual DbSet<AlmacenamientoTemporal> AlmacenamientoTemporal { get; set; }
        public virtual DbSet<ResourceGroup> ResourceGroup { get; set; }
        public virtual DbSet<Agrupaciones> Agrupaciones { get; set; }
        public virtual DbSet<TipoAgrupacion> TipoAgrupacion { get; set; }
        public virtual DbSet<PolicyTargeting> PolicyTargeting { get; set; }
        public virtual DbSet<PolicyIndicator> PolicyIndicator { get; set; }
        public virtual DbSet<PolicyTargetingIndicator> PolicyTargetingIndicator { get; set; }
        public virtual DbSet<TipoCofinanciador> TipoCofinanciador { get; set; }
        public virtual DbSet<ResourceGroupEntityType> ResourceGroupEntityType { get; set; }
        public virtual DbSet<TipoDocumentoTramite> TipoDocumentoTramite { get; set; }
        public virtual DbSet<TipoDocumentoTramiteRol> TipoDocumentoTramiteRol { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<JustificacionRespuesta> JustificacionRespuesta { get; set; }
        public virtual DbSet<JustificacionRespuestaDetalle> JustificacionRespuestaDetalle { get; set; }
        public virtual DbSet<ProyectoFuentesPresupuestal> ProyectoFuentesPresupuestal { get; set; }
        public virtual DbSet<ProyectoFuentesPresupuestalValores> ProyectoFuentesPresupuestalValores { get; set; }
        public virtual DbSet<Proyectos> Proyectos { get; set; }
        public virtual DbSet<ProyectosRequisitos> ProyectosRequisitos { get; set; }
        public virtual DbSet<ProyectosRequisitosValores> ProyectosRequisitosValores { get; set; }
        public virtual DbSet<ProyectosValores> ProyectosValores { get; set; }
        public virtual DbSet<Fondo> Fondo { get; set; }
        public virtual DbSet<DNH_SIIF> DNH_SIIF { get; set; }
        public virtual DbSet<ProyectoConpes> ProyectoConpes { get; set; }
        public virtual DbSet<CartaConceptoFirma> CartaConceptoFirma { get; set; }
        public virtual DbSet<Capitulo> Capitulo { get; set; }
        public virtual DbSet<Seccion> Seccion { get; set; }
        public virtual DbSet<CartaConcepto> CartaConcepto { get; set; }
        public virtual DbSet<TramiteConpes> TramiteConpes { get; set; }
        public virtual DbSet<PeriodoPresidencial> PeriodoPresidencial { get; set; }
        public virtual DbSet<CapitulosModificados> CapitulosModificados { get; set; }
        public virtual DbSet<DeliverableCatalog> DeliverableCatalog { get; set; }
        public virtual DbSet<MacroprocesoSeccion> MacroprocesoSeccion { get; set; }
        public virtual DbSet<SeccionCapitulos> SeccionCapitulos { get; set; }
        public virtual DbSet<SystemConfigurations> SystemConfigurations { get; set; }
        public virtual DbSet<TransferConfiguration> TransferConfiguration { get; set; }
        public virtual DbSet<ResourceType> ResourceType { get; set; }
        public virtual DbSet<ResourceTypeByEntity> ResourceTypeByEntity { get; set; }
        public virtual DbSet<Ejecutor> Ejecutores { get; set; }
        public virtual DbSet<Reprogramacion> Reprogramacion { get; set; }
    
        [DbFunction("MGAWebContexto", "ConvertirJsonOpciones")]
        public virtual IQueryable<ConvertirJsonOpciones_Result> ConvertirJsonOpciones(Nullable<int> idPregunta, string opcionesrespuesta)
        {
            var idPreguntaParameter = idPregunta.HasValue ?
                new ObjectParameter("IdPregunta", idPregunta) :
                new ObjectParameter("IdPregunta", typeof(int));
    
            var opcionesrespuestaParameter = opcionesrespuesta != null ?
                new ObjectParameter("opcionesrespuesta", opcionesrespuesta) :
                new ObjectParameter("opcionesrespuesta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConvertirJsonOpciones_Result>("[MGAWebContexto].[ConvertirJsonOpciones](@IdPregunta, @opcionesrespuesta)", idPreguntaParameter, opcionesrespuestaParameter);
        }
    
        public virtual int uspIdentificarEntidadDestino(Nullable<int> projectId, Nullable<int> entidadTransfiereId, ObjectParameter entidadDestino, ObjectParameter entidadDestinoId, ObjectParameter errorValidacionNegocio)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var entidadTransfiereIdParameter = entidadTransfiereId.HasValue ?
                new ObjectParameter("EntidadTransfiereId", entidadTransfiereId) :
                new ObjectParameter("EntidadTransfiereId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspIdentificarEntidadDestino", projectIdParameter, entidadTransfiereIdParameter, entidadDestino, entidadDestinoId, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetObtenerPreguntasEspecificas_Result> uspGetObtenerPreguntasEspecificas(string bPIN, Nullable<System.Guid> nivelId, Nullable<System.Guid> instanciaId, Nullable<System.Guid> formularioId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerPreguntasEspecificas_Result>("uspGetObtenerPreguntasEspecificas", bPINParameter, nivelIdParameter, instanciaIdParameter, formularioIdParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerPreguntasGenerales_Result> uspGetObtenerPreguntasGenerales(string bPIN, Nullable<System.Guid> nivelId, Nullable<System.Guid> instanciaId, Nullable<System.Guid> formularioId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerPreguntasGenerales_Result>("uspGetObtenerPreguntasGenerales", bPINParameter, nivelIdParameter, instanciaIdParameter, formularioIdParameter);
        }
    
        public virtual int uspPostGeneracionCuestionarioPreguntas(string jsonData, string usuario, Nullable<bool> guardarTemporalmente, Nullable<System.Guid> instanciaId, Nullable<System.Guid> formularioId, ObjectParameter resultado)
        {
            var jsonDataParameter = jsonData != null ?
                new ObjectParameter("JsonData", jsonData) :
                new ObjectParameter("JsonData", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var guardarTemporalmenteParameter = guardarTemporalmente.HasValue ?
                new ObjectParameter("guardarTemporalmente", guardarTemporalmente) :
                new ObjectParameter("guardarTemporalmente", typeof(bool));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostGeneracionCuestionarioPreguntas", jsonDataParameter, usuarioParameter, guardarTemporalmenteParameter, instanciaIdParameter, formularioIdParameter, resultado);
        }
    
        public virtual ObjectResult<uspGetPreguntasRequisitosAdicionales_Result> uspGetPreguntasRequisitosAdicionales(string bPIN, Nullable<System.Guid> nivelId, Nullable<System.Guid> instanciaId, Nullable<System.Guid> formularioId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPreguntasRequisitosAdicionales_Result>("uspGetPreguntasRequisitosAdicionales", bPINParameter, nivelIdParameter, instanciaIdParameter, formularioIdParameter);
        }
    
        public virtual int uspPostPreguntasRequisitosAdicionales(string bPIN, Nullable<System.Guid> nivelId, string jsonData, string usuario, Nullable<System.Guid> instanciaId, Nullable<System.Guid> formularioId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var jsonDataParameter = jsonData != null ?
                new ObjectParameter("JsonData", jsonData) :
                new ObjectParameter("JsonData", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPreguntasRequisitosAdicionales", bPINParameter, nivelIdParameter, jsonDataParameter, usuarioParameter, instanciaIdParameter, formularioIdParameter);
        }
    
        public virtual ObjectResult<uspProyectosPorEstadosValidos_Result> uspProyectosPorEstadosValidos(string estados, string proyectos)
        {
            var estadosParameter = estados != null ?
                new ObjectParameter("Estados", estados) :
                new ObjectParameter("Estados", typeof(string));
    
            var proyectosParameter = proyectos != null ?
                new ObjectParameter("Proyectos", proyectos) :
                new ObjectParameter("Proyectos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspProyectosPorEstadosValidos_Result>("uspProyectosPorEstadosValidos", estadosParameter, proyectosParameter);
        }
    
        public virtual ObjectResult<uspGetEntidadesDestinoRoles_Result> uspGetEntidadesDestinoRoles(string bPIN, string jsonData, Guid? instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var jsonDataParameter = jsonData != null ?
                new ObjectParameter("JsonData", jsonData) :
                new ObjectParameter("JsonData", typeof(string));

            var instanciaIdParameter = instanciaId != null ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(Guid));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEntidadesDestinoRoles_Result>("uspGetEntidadesDestinoRoles", bPINParameter, jsonDataParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<uspGetCadenaValor_Result> uspGetCadenaValor(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCadenaValor_Result>("uspGetCadenaValor", bPINParameter);
        }
    
        public virtual int uspPostCadenaValor(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("Json", json) :
                new ObjectParameter("Json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCadenaValor", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetPIIP_Result> uspGetPIIP(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPIIP_Result>("uspGetPIIP", bPINParameter);
        }
    
        public virtual ObjectResult<uspProgramacion_Result> uspProgramacion(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspProgramacion_Result>("uspProgramacion", bPINParameter);
        }
    
        public virtual int uspEliminaPregEspecificasSectorAnterior(Nullable<int> cuestionarioProyectoId, Nullable<int> sectorId)
        {
            var cuestionarioProyectoIdParameter = cuestionarioProyectoId.HasValue ?
                new ObjectParameter("CuestionarioProyectoId", cuestionarioProyectoId) :
                new ObjectParameter("CuestionarioProyectoId", typeof(int));
    
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("SectorId", sectorId) :
                new ObjectParameter("SectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspEliminaPregEspecificasSectorAnterior", cuestionarioProyectoIdParameter, sectorIdParameter);
        }
    
        public virtual int uspObtenerPreguntasEspecificas(string bPIN, Nullable<System.Guid> nivelId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspObtenerPreguntasEspecificas", bPINParameter, nivelIdParameter);
        }
    
        public virtual int uspObtenerPreguntasGenerales(string bPIN, Nullable<System.Guid> nivelId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspObtenerPreguntasGenerales", bPINParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<uspGetProductosPorProyecto_Result> uspGetProductosPorProyecto(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProductosPorProyecto_Result>("uspGetProductosPorProyecto", bPINParameter);
        }
    
        public virtual int uspPostProductosPorProyecto(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostProductosPorProyecto", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostCambioEstadoProyecto(string bPIN, Nullable<System.Guid> nivelId, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCambioEstadoProyecto", bPINParameter, nivelIdParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetRecursos_Result> uspGetRecursos(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRecursos_Result>("uspGetRecursos", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetRecursosOld_Result> uspGetRecursosOld(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRecursosOld_Result>("uspGetRecursosOld", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetRecursosRegionalizacion_Result> uspGetRecursosRegionalizacion(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRecursosRegionalizacion_Result>("uspGetRecursosRegionalizacion", bPINParameter);
        }
    
        public virtual int uspPostInsertarRecursos(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostInsertarRecursos", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGenerarBPIN(Nullable<int> projectId)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGenerarBPIN", projectIdParameter);
        }
    
        public virtual int uspGetIdentificarEntidadDestinoRespuesta(Nullable<int> projectId, ObjectParameter codigoError, ObjectParameter mensajeError)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetIdentificarEntidadDestinoRespuesta", projectIdParameter, codigoError, mensajeError);
        }
    
        public virtual int uspGetValidacionesRespuesta(Nullable<int> projectId, ObjectParameter codigoError, ObjectParameter mensajeError)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetValidacionesRespuesta", projectIdParameter, codigoError, mensajeError);
        }
    
        public virtual int uspPostIdentificarEntidadDestino(Nullable<decimal> projectId, ObjectParameter entidadDestino, ObjectParameter entidadDestinoId, ObjectParameter errorValidacionNegocio)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostIdentificarEntidadDestino", projectIdParameter, entidadDestino, entidadDestinoId, errorValidacionNegocio);
        }
    
        public virtual int uspValidaciones(Nullable<decimal> proyectoId, ObjectParameter exitoso)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspValidaciones", proyectoIdParameter, exitoso);
        }
    
        public virtual ObjectResult<uspGetFuentesFinanciacion_Result> uspGetFuentesFinanciacion(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetFuentesFinanciacion_Result>("uspGetFuentesFinanciacion", bPINParameter);
        }
    
        public virtual int uspPostFuentesFinanciacion(string json, string usuario, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuentesFinanciacion", jsonParameter, usuarioParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspProyectosPorBPIN_Result> uspProyectosPorBPIN(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspProyectosPorBPIN_Result>("uspProyectosPorBPIN", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetDatosBasicosSGR_Result> uspGetDatosBasicosSGR(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosBasicosSGR_Result>("uspGetDatosBasicosSGR", bPINParameter);
        }
    
        public virtual int uspPostDatosBasicosSGR(string json, string usuario, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostDatosBasicosSGR", jsonParameter, usuarioParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetFuenteFinanciacionAgregar_Result> uspGetFuenteFinanciacionAgregar(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetFuenteFinanciacionAgregar_Result>("uspGetFuenteFinanciacionAgregar", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetDevolverProyecto_Result> uspGetDevolverProyecto(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDevolverProyecto_Result>("uspGetDevolverProyecto", bPINParameter);
        }
    
        public virtual int uspPostDevolverProyecto(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostDevolverProyecto", jsonParameter, usuarioParameter, instanciaIdParameter, accionIdParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetDevolverProyectoMga_Result> uspGetDevolverProyectoMga(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDevolverProyectoMga_Result>("uspGetDevolverProyectoMga", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetEstados_Result> uspGetEstados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEstados_Result>("uspGetEstados");
        }
    
        public virtual ObjectResult<uspProyectosPorId_Result> uspProyectosPorId(string proyectos)
        {
            var proyectosParameter = proyectos != null ?
                new ObjectParameter("Proyectos", proyectos) :
                new ObjectParameter("Proyectos", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspProyectosPorId_Result>("uspProyectosPorId", proyectosParameter);
        }
    
        public virtual int spDeleteMatrizEntidadDestinoAccion(Nullable<int> entidadResponsableId, ObjectParameter result)
        {
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteMatrizEntidadDestinoAccion", entidadResponsableIdParameter, result);
        }
    
        public virtual ObjectResult<spGetMatrizEntidadDestinoAccion_Result> spGetMatrizEntidadDestinoAccion(Nullable<int> entidadResponsableId)
        {
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetMatrizEntidadDestinoAccion_Result>("spGetMatrizEntidadDestinoAccion", entidadResponsableIdParameter);
        }
    
        public virtual int spInsertMatrizEntidadDestinoAccion(Nullable<int> cRTypeId, Nullable<int> entidadResponsableId, string entidadResponsable, Nullable<int> sectorId, string sector, Nullable<System.Guid> rolId, string rol, Nullable<int> entidadDestinoAccionId, string entidadDestinoAccion, Nullable<System.DateTime> creado, Nullable<System.DateTime> modificado, string creadoPor, string modificadoPor, Nullable<System.Guid> faseGuid, Nullable<System.Guid> tipoFlujo, ObjectParameter id)
        {
            var cRTypeIdParameter = cRTypeId.HasValue ?
                new ObjectParameter("CRTypeId", cRTypeId) :
                new ObjectParameter("CRTypeId", typeof(int));
    
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            var entidadResponsableParameter = entidadResponsable != null ?
                new ObjectParameter("EntidadResponsable", entidadResponsable) :
                new ObjectParameter("EntidadResponsable", typeof(string));
    
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("SectorId", sectorId) :
                new ObjectParameter("SectorId", typeof(int));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(System.Guid));
    
            var rolParameter = rol != null ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(string));
    
            var entidadDestinoAccionIdParameter = entidadDestinoAccionId.HasValue ?
                new ObjectParameter("EntidadDestinoAccionId", entidadDestinoAccionId) :
                new ObjectParameter("EntidadDestinoAccionId", typeof(int));
    
            var entidadDestinoAccionParameter = entidadDestinoAccion != null ?
                new ObjectParameter("EntidadDestinoAccion", entidadDestinoAccion) :
                new ObjectParameter("EntidadDestinoAccion", typeof(string));
    
            var creadoParameter = creado.HasValue ?
                new ObjectParameter("Creado", creado) :
                new ObjectParameter("Creado", typeof(System.DateTime));
    
            var modificadoParameter = modificado.HasValue ?
                new ObjectParameter("Modificado", modificado) :
                new ObjectParameter("Modificado", typeof(System.DateTime));
    
            var creadoPorParameter = creadoPor != null ?
                new ObjectParameter("CreadoPor", creadoPor) :
                new ObjectParameter("CreadoPor", typeof(string));
    
            var modificadoPorParameter = modificadoPor != null ?
                new ObjectParameter("ModificadoPor", modificadoPor) :
                new ObjectParameter("ModificadoPor", typeof(string));
    
            var faseGuidParameter = faseGuid.HasValue ?
                new ObjectParameter("FaseGuid", faseGuid) :
                new ObjectParameter("FaseGuid", typeof(System.Guid));
    
            var tipoFlujoParameter = tipoFlujo.HasValue ?
                new ObjectParameter("TipoFlujo", tipoFlujo) :
                new ObjectParameter("TipoFlujo", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertMatrizEntidadDestinoAccion", cRTypeIdParameter, entidadResponsableIdParameter, entidadResponsableParameter, sectorIdParameter, sectorParameter, rolIdParameter, rolParameter, entidadDestinoAccionIdParameter, entidadDestinoAccionParameter, creadoParameter, modificadoParameter, creadoPorParameter, modificadoPorParameter, faseGuidParameter, tipoFlujoParameter, id);
        }
    
        public virtual int spUpdateMatrizEntidadDestinoAccion(Nullable<int> id, Nullable<int> cRTypeId, Nullable<int> sectorId, string sector, Nullable<System.Guid> rolId, string rol, Nullable<int> entidadDestinoAccionId, string entidadDestinoAccion, Nullable<System.DateTime> modificado, string modificadoPor, Nullable<System.Guid> faseGuid, Nullable<System.Guid> tipoFlujo, ObjectParameter result)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var cRTypeIdParameter = cRTypeId.HasValue ?
                new ObjectParameter("CRTypeId", cRTypeId) :
                new ObjectParameter("CRTypeId", typeof(int));
    
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("SectorId", sectorId) :
                new ObjectParameter("SectorId", typeof(int));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(System.Guid));
    
            var rolParameter = rol != null ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(string));
    
            var entidadDestinoAccionIdParameter = entidadDestinoAccionId.HasValue ?
                new ObjectParameter("EntidadDestinoAccionId", entidadDestinoAccionId) :
                new ObjectParameter("EntidadDestinoAccionId", typeof(int));
    
            var entidadDestinoAccionParameter = entidadDestinoAccion != null ?
                new ObjectParameter("EntidadDestinoAccion", entidadDestinoAccion) :
                new ObjectParameter("EntidadDestinoAccion", typeof(string));
    
            var modificadoParameter = modificado.HasValue ?
                new ObjectParameter("Modificado", modificado) :
                new ObjectParameter("Modificado", typeof(System.DateTime));
    
            var modificadoPorParameter = modificadoPor != null ?
                new ObjectParameter("ModificadoPor", modificadoPor) :
                new ObjectParameter("ModificadoPor", typeof(string));
    
            var faseGuidParameter = faseGuid.HasValue ?
                new ObjectParameter("FaseGuid", faseGuid) :
                new ObjectParameter("FaseGuid", typeof(System.Guid));
    
            var tipoFlujoParameter = tipoFlujo.HasValue ?
                new ObjectParameter("TipoFlujo", tipoFlujo) :
                new ObjectParameter("TipoFlujo", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateMatrizEntidadDestinoAccion", idParameter, cRTypeIdParameter, sectorIdParameter, sectorParameter, rolIdParameter, rolParameter, entidadDestinoAccionIdParameter, entidadDestinoAccionParameter, modificadoParameter, modificadoPorParameter, faseGuidParameter, tipoFlujoParameter, result);
        }
    
        public virtual ObjectResult<uspGetAuditoriaEntidadProyecto_Result> uspGetAuditoriaEntidadProyecto(Nullable<int> proyectoId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAuditoriaEntidadProyecto_Result>("uspGetAuditoriaEntidadProyecto", proyectoIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspPostAuditoriaEntidadProyectos(Nullable<int> entidadOrigenId, string entidadOrigenNombre, Nullable<int> entidadDestinoId, string entidadDestinoNombre, Nullable<System.Guid> usuarioId, string nombreUsuario, Nullable<System.DateTime> fecha, Nullable<int> proyectoId, Nullable<int> sectorId, Nullable<int> entidadTipoId)
        {
            var entidadOrigenIdParameter = entidadOrigenId.HasValue ?
                new ObjectParameter("entidadOrigenId", entidadOrigenId) :
                new ObjectParameter("entidadOrigenId", typeof(int));
    
            var entidadOrigenNombreParameter = entidadOrigenNombre != null ?
                new ObjectParameter("entidadOrigenNombre", entidadOrigenNombre) :
                new ObjectParameter("entidadOrigenNombre", typeof(string));
    
            var entidadDestinoIdParameter = entidadDestinoId.HasValue ?
                new ObjectParameter("entidadDestinoId", entidadDestinoId) :
                new ObjectParameter("entidadDestinoId", typeof(int));
    
            var entidadDestinoNombreParameter = entidadDestinoNombre != null ?
                new ObjectParameter("entidadDestinoNombre", entidadDestinoNombre) :
                new ObjectParameter("entidadDestinoNombre", typeof(string));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(System.Guid));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("nombreUsuario", nombreUsuario) :
                new ObjectParameter("nombreUsuario", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("sectorId", sectorId) :
                new ObjectParameter("sectorId", typeof(int));
    
            var entidadTipoIdParameter = entidadTipoId.HasValue ?
                new ObjectParameter("entidadTipoId", entidadTipoId) :
                new ObjectParameter("entidadTipoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspPostAuditoriaEntidadProyectos", entidadOrigenIdParameter, entidadOrigenNombreParameter, entidadDestinoIdParameter, entidadDestinoNombreParameter, usuarioIdParameter, nombreUsuarioParameter, fechaParameter, proyectoIdParameter, sectorIdParameter, entidadTipoIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetFuentesFinanciacion_Cofinanciacion_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetFuentesFinanciacion_Cofinanciacion_JSON", bPINParameter);
        }
    
        public virtual int uspPostFuenteCofinanciacion(string json, string usuario, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuenteCofinanciacion", jsonParameter, usuarioParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostFuenteFinanciacionAgregar(string json, string usuario, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuenteFinanciacionAgregar", jsonParameter, usuarioParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> UspGetAlcance_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetAlcance_JSON", bPINParameter);
        }
    
        public virtual int uspPostAlcance(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAlcance", jsonParameter, usuarioParameter, instanciaIdParameter, accionIdParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostAlcanceTemp(Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAlcanceTemp", instanciaIdParameter, accionIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetRegionalizaicion_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetRegionalizaicion_JSON", bPINParameter);
        }
    
        public virtual int uspPostRegionalizacion(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostRegionalizacion", jsonParameter, usuarioParameter, instanciaIdParameter, accionIdParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostRegionalizacionTemp(Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostRegionalizacionTemp", instanciaIdParameter, accionIdParameter);
        }
    
        public virtual ObjectResult<uspGetEntidadesAprobadoras_Result> uspGetEntidadesAprobadoras(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEntidadesAprobadoras_Result>("uspGetEntidadesAprobadoras", bPINParameter);
        }
    
        public virtual ObjectResult<string> uspGetCofinanciadorAgregar_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCofinanciadorAgregar_JSON", bPINParameter);
        }
    
        public virtual int uspPostCofinanciadorAgregar(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCofinanciadorAgregar", jsonParameter, usuarioParameter, instanciaIdParameter, accionIdParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostCofinanciadorAgregarTemp(Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCofinanciadorAgregarTemp", instanciaIdParameter, accionIdParameter);
        }
    
        public virtual int uspValidaCofinanciadorAgregar(ObjectParameter respuesta)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspValidaCofinanciadorAgregar", respuesta);
        }
    
        public virtual int uspPostFuenteCofinanciacionTemp(Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuenteCofinanciacionTemp", instanciaIdParameter, accionIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetAgregarPoliticasTransversalesJerarquia_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetAgregarPoliticasTransversalesJerarquia_JSON", bPINParameter);
        }
    
        public virtual int uspPostAgregarPoliticasTransversalesJerarquia(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarPoliticasTransversalesJerarquia", jsonParameter, usuarioParameter, instanciaIdParameter, accionIdParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostAgregarPoliticasTransversalesJerarquiaTemp(Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarPoliticasTransversalesJerarquiaTemp", instanciaIdParameter, accionIdParameter);
        }
    
        public virtual ObjectResult<uspGetProyectosTramite_Result> uspGetProyectosTramite(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectosTramite_Result>("uspGetProyectosTramite", tramiteIdParameter);
        }
    
        public virtual int uspPostAgregarProyectos(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<int> entidadId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("instanciaId", instanciaId) :
                new ObjectParameter("instanciaId", typeof(System.Guid));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarProyectos", jsonParameter, usuarioParameter, instanciaIdParameter, entidadIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetAgregarPoliticas_Ajustar_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetAgregarPoliticas_Ajustar_JSON", bPINParameter);
        }
    
        public virtual int uspPostAgregarPoliticas_Ajustar(string json, string usuario, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarPoliticas_Ajustar", jsonParameter, usuarioParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostAgregarPoliticas_AjustarTemp(Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarPoliticas_AjustarTemp", instanciaIdParameter, accionIdParameter);
        }
    
        public virtual ObjectResult<uspGetFuentesInformacionPresupuestal_Result> uspGetFuentesInformacionPresupuestal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetFuentesInformacionPresupuestal_Result>("uspGetFuentesInformacionPresupuestal");
        }
    
        public virtual int uspPostActualizaValoresInfomracionPresupuestal(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<int> entidadId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("instanciaId", instanciaId) :
                new ObjectParameter("instanciaId", typeof(System.Guid));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaValoresInfomracionPresupuestal", jsonParameter, usuarioParameter, instanciaIdParameter, entidadIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostActualizaValoresTipoRequisito(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<int> entidadId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("instanciaId", instanciaId) :
                new ObjectParameter("instanciaId", typeof(System.Guid));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaValoresTipoRequisito", jsonParameter, usuarioParameter, instanciaIdParameter, entidadIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetJustificacionTramiteProyecto_Result> uspGetJustificacionTramiteProyecto(Nullable<int> tramiteId, Nullable<int> proyectoId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetJustificacionTramiteProyecto_Result>("uspGetJustificacionTramiteProyecto", tramiteIdParameter, proyectoIdParameter);
        }
    
        public virtual int uspPostActualizarProyectoValores(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<int> entidadId, Nullable<int> tipoRolId, Nullable<decimal> montoNacionTramite, Nullable<decimal> montoPropiosTramite, string tipoProyecto, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("EntidadId", entidadId) :
                new ObjectParameter("EntidadId", typeof(int));
    
            var tipoRolIdParameter = tipoRolId.HasValue ?
                new ObjectParameter("TipoRolId", tipoRolId) :
                new ObjectParameter("TipoRolId", typeof(int));
    
            var montoNacionTramiteParameter = montoNacionTramite.HasValue ?
                new ObjectParameter("MontoNacionTramite", montoNacionTramite) :
                new ObjectParameter("MontoNacionTramite", typeof(decimal));
    
            var montoPropiosTramiteParameter = montoPropiosTramite.HasValue ?
                new ObjectParameter("MontoPropiosTramite", montoPropiosTramite) :
                new ObjectParameter("MontoPropiosTramite", typeof(decimal));
    
            var tipoProyectoParameter = tipoProyecto != null ?
                new ObjectParameter("TipoProyecto", tipoProyecto) :
                new ObjectParameter("TipoProyecto", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizarProyectoValores", tramiteIdParameter, proyectoIdParameter, entidadIdParameter, tipoRolIdParameter, montoNacionTramiteParameter, montoPropiosTramiteParameter, tipoProyectoParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostAgregarRespuestaJustificacionTramite(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarRespuestaJustificacionTramite", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostEliminarProyectos(Nullable<int> tramiteId, Nullable<int> proyectoId, ObjectParameter errorValidacionNegocio)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEliminarProyectos", tramiteIdParameter, proyectoIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetPreguntasJustificacionTramiteProyecto_Result> uspGetPreguntasJustificacionTramiteProyecto(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<int> tipoTramiteId, Nullable<System.Guid> nivelId, Nullable<System.Guid> rolId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("TipoTramiteId", tipoTramiteId) :
                new ObjectParameter("TipoTramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPreguntasJustificacionTramiteProyecto_Result>("uspGetPreguntasJustificacionTramiteProyecto", tramiteIdParameter, proyectoIdParameter, tipoTramiteIdParameter, nivelIdParameter, rolIdParameter);
        }
    
        public virtual int uspPostValidarEnviarDatosTramiteNegocio(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostValidarEnviarDatosTramiteNegocio", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetResumenTramiteDistribuciones_JSON(Nullable<System.Guid> instanciaId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetResumenTramiteDistribuciones_JSON", instanciaIdParameter);
        }
    
        public virtual ObjectResult<uspGetTiposRequisito_Result> uspGetTiposRequisito()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTiposRequisito_Result>("uspGetTiposRequisito");
        }
    
        public virtual int uspPostGuardarFuentesTramiteProyectoAprobacion(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostGuardarFuentesTramiteProyectoAprobacion", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<DatosGeneralesProyecto_Result> DatosGeneralesProyecto(Nullable<int> proyectoId, Nullable<System.Guid> nivelId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DatosGeneralesProyecto_Result>("DatosGeneralesProyecto", proyectoIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<uspGetConfiguracionEntidades_AplicaTecnico_Result> uspGetConfiguracionEntidades_AplicaTecnico(Nullable<int> proyectoId, Nullable<System.Guid> faseId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var faseIdParameter = faseId.HasValue ?
                new ObjectParameter("FaseId", faseId) :
                new ObjectParameter("FaseId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetConfiguracionEntidades_AplicaTecnico_Result>("uspGetConfiguracionEntidades_AplicaTecnico", proyectoIdParameter, faseIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetObtenerSolicitarConcepto_JSON(Nullable<int> tramiteid)
        {
            var tramiteidParameter = tramiteid.HasValue ?
                new ObjectParameter("tramiteid", tramiteid) :
                new ObjectParameter("tramiteid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetObtenerSolicitarConcepto_JSON", tramiteidParameter);
        }
    
        public virtual int uspPostGeneracionCuestionarioPreguntasPersonalizadas(string jsonData, Nullable<System.Guid> instanciaId, string usuario, ObjectParameter resultado)
        {
            var jsonDataParameter = jsonData != null ?
                new ObjectParameter("JsonData", jsonData) :
                new ObjectParameter("JsonData", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostGeneracionCuestionarioPreguntasPersonalizadas", jsonDataParameter, instanciaIdParameter, usuarioParameter, resultado);
        }
    
        public virtual int uspPostGuardarSolicitarConcepto(string json, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostGuardarSolicitarConcepto", jsonParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetConsultarCodigoPresupuestal_Result> uspGetConsultarCodigoPresupuestal(Nullable<int> entidadid, Nullable<int> tramiteid, Nullable<int> proyectoid)
        {
            var entidadidParameter = entidadid.HasValue ?
                new ObjectParameter("entidadid", entidadid) :
                new ObjectParameter("entidadid", typeof(int));
    
            var tramiteidParameter = tramiteid.HasValue ?
                new ObjectParameter("tramiteid", tramiteid) :
                new ObjectParameter("tramiteid", typeof(int));
    
            var proyectoidParameter = proyectoid.HasValue ?
                new ObjectParameter("proyectoid", proyectoid) :
                new ObjectParameter("proyectoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetConsultarCodigoPresupuestal_Result>("uspGetConsultarCodigoPresupuestal", entidadidParameter, tramiteidParameter, proyectoidParameter);
        }
    
        public virtual int uspPostActualizaCodigoPresupuestal(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaCodigoPresupuestal", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetProyectoFuentePresupuestalPorTramite_Result3> uspGetProyectoFuentePresupuestalPorTramite(Nullable<int> proyectoId, Nullable<int> tramiteId, string tipoProyecto)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var tipoProyectoParameter = tipoProyecto != null ?
                new ObjectParameter("TipoProyecto", tipoProyecto) :
                new ObjectParameter("TipoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectoFuentePresupuestalPorTramite_Result3>("uspGetProyectoFuentePresupuestalPorTramite", proyectoIdParameter, tramiteIdParameter, tipoProyectoParameter);
        }
    
        public virtual int uspPostDevolverCuestionarioProyecto(Nullable<System.Guid> nivelId, Nullable<System.Guid> instanciaId, Nullable<int> estadoAccionesPorInstancia, ObjectParameter resultado)
        {
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var estadoAccionesPorInstanciaParameter = estadoAccionesPorInstancia.HasValue ?
                new ObjectParameter("EstadoAccionesPorInstancia", estadoAccionesPorInstancia) :
                new ObjectParameter("EstadoAccionesPorInstancia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostDevolverCuestionarioProyecto", nivelIdParameter, instanciaIdParameter, estadoAccionesPorInstanciaParameter, resultado);
        }
    
        public virtual int InsertMissingProjectComment(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("AccionId", accionId) :
                new ObjectParameter("AccionId", typeof(System.Guid));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMissingProjectComment", jsonParameter, usuarioParameter, instanciaIdParameter, accionIdParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetProyectoRequisitosPorTramite_Result> uspGetProyectoRequisitosPorTramite(Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectoRequisitosPorTramite_Result>("uspGetProyectoRequisitosPorTramite", proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetAgregarFuente(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetAgregarFuente", bPINParameter);
        }
    
        public virtual int uspPostPreguntasConceptoDireccionTecnicaTramite(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPreguntasConceptoDireccionTecnicaTramite", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostFuentesFinanciacionEliminar(Nullable<int> fuentesFinanciacionId, ObjectParameter errorValidacionNegocio)
        {
            var fuentesFinanciacionIdParameter = fuentesFinanciacionId.HasValue ?
                new ObjectParameter("FuentesFinanciacionId", fuentesFinanciacionId) :
                new ObjectParameter("FuentesFinanciacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuentesFinanciacionEliminar", fuentesFinanciacionIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostDatosAdicionales(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostDatosAdicionales", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostDatosAdicionalesFinanciacionEliminar(Nullable<int> cofinanciadorId, ObjectParameter errorValidacionNegocio)
        {
            var cofinanciadorIdParameter = cofinanciadorId.HasValue ?
                new ObjectParameter("CofinanciadorId", cofinanciadorId) :
                new ObjectParameter("CofinanciadorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostDatosAdicionalesFinanciacionEliminar", cofinanciadorIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<Nullable<int>> UspPostCargarFirma(byte[] firma, string rolId, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var firmaParameter = firma != null ?
                new ObjectParameter("firma", firma) :
                new ObjectParameter("firma", typeof(byte[]));
    
            var rolIdParameter = rolId != null ?
                new ObjectParameter("rolId", rolId) :
                new ObjectParameter("rolId", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UspPostCargarFirma", firmaParameter, rolIdParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostActualizaHorizonte(Nullable<int> idProyecto, Nullable<int> mantiene, string vigenciaInicio, string vigenciaHasta, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(int));
    
            var mantieneParameter = mantiene.HasValue ?
                new ObjectParameter("mantiene", mantiene) :
                new ObjectParameter("mantiene", typeof(int));
    
            var vigenciaInicioParameter = vigenciaInicio != null ?
                new ObjectParameter("vigenciaInicio", vigenciaInicio) :
                new ObjectParameter("vigenciaInicio", typeof(string));
    
            var vigenciaHastaParameter = vigenciaHasta != null ?
                new ObjectParameter("vigenciaHasta", vigenciaHasta) :
                new ObjectParameter("vigenciaHasta", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaHorizonte", idProyectoParameter, mantieneParameter, vigenciaInicioParameter, vigenciaHastaParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetIndicadorProducto_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetIndicadorProducto_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<UspGetCapitulos_Result> UspGetCapitulos(Nullable<int> macroproceso, Nullable<int> proyectoId, Nullable<System.Guid> instanciaId)
        {
            var macroprocesoParameter = macroproceso.HasValue ?
                new ObjectParameter("Macroproceso", macroproceso) :
                new ObjectParameter("Macroproceso", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("instanciaId", instanciaId) :
                new ObjectParameter("instanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetCapitulos_Result>("UspGetCapitulos", macroprocesoParameter, proyectoIdParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<uspGetPlantillaCarta_Result1> uspGetPlantillaCarta(string nombreSeccion, Nullable<int> tipoTramite)
        {
            var nombreSeccionParameter = nombreSeccion != null ?
                new ObjectParameter("nombreSeccion", nombreSeccion) :
                new ObjectParameter("nombreSeccion", typeof(string));
    
            var tipoTramiteParameter = tipoTramite.HasValue ?
                new ObjectParameter("tipoTramite", tipoTramite) :
                new ObjectParameter("tipoTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPlantillaCarta_Result1>("uspGetPlantillaCarta", nombreSeccionParameter, tipoTramiteParameter);
        }
    
        public virtual ObjectResult<uspGetDatosCartaPorPlantillaSeccion_Result> uspGetDatosCartaPorPlantillaSeccion(Nullable<int> plantillaSeccionId, Nullable<int> tramiteId)
        {
            var plantillaSeccionIdParameter = plantillaSeccionId.HasValue ?
                new ObjectParameter("plantillaSeccionId", plantillaSeccionId) :
                new ObjectParameter("plantillaSeccionId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosCartaPorPlantillaSeccion_Result>("uspGetDatosCartaPorPlantillaSeccion", plantillaSeccionIdParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetDatosCartaPorPlantillaSeccionDespedida_Result> uspGetDatosCartaPorPlantillaSeccionDespedida(Nullable<int> plantillaSeccionId, Nullable<int> tramiteId)
        {
            var plantillaSeccionIdParameter = plantillaSeccionId.HasValue ?
                new ObjectParameter("plantillaSeccionId", plantillaSeccionId) :
                new ObjectParameter("plantillaSeccionId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosCartaPorPlantillaSeccionDespedida_Result>("uspGetDatosCartaPorPlantillaSeccionDespedida", plantillaSeccionIdParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<UspGetUsauriosRegistrados_Result> UspGetUsauriosRegistrados(string tramite)
        {
            var tramiteParameter = tramite != null ?
                new ObjectParameter("tramite", tramite) :
                new ObjectParameter("tramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetUsauriosRegistrados_Result>("UspGetUsauriosRegistrados", tramiteParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerValoresProyectos_Result> uspGetObtenerValoresProyectos(Nullable<int> tramiteId, Nullable<int> proyectoid, Nullable<int> entidadid)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoidParameter = proyectoid.HasValue ?
                new ObjectParameter("proyectoid", proyectoid) :
                new ObjectParameter("proyectoid", typeof(int));
    
            var entidadidParameter = entidadid.HasValue ?
                new ObjectParameter("entidadid", entidadid) :
                new ObjectParameter("entidadid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerValoresProyectos_Result>("uspGetObtenerValoresProyectos", tramiteIdParameter, proyectoidParameter, entidadidParameter);
        }
    
        public virtual int uspPostActualizaCartaDatosIniciales(Nullable<int> cartaId, Nullable<int> cartaSeccionId, Nullable<int> tramiteId, Nullable<int> tipoTramite, string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var cartaIdParameter = cartaId.HasValue ?
                new ObjectParameter("CartaId", cartaId) :
                new ObjectParameter("CartaId", typeof(int));
    
            var cartaSeccionIdParameter = cartaSeccionId.HasValue ?
                new ObjectParameter("CartaSeccionId", cartaSeccionId) :
                new ObjectParameter("CartaSeccionId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var tipoTramiteParameter = tipoTramite.HasValue ?
                new ObjectParameter("TipoTramite", tipoTramite) :
                new ObjectParameter("TipoTramite", typeof(int));
    
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaCartaDatosIniciales", cartaIdParameter, cartaSeccionIdParameter, tramiteIdParameter, tipoTramiteParameter, jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostValidarEnviarDatosAprobacionTramiteNegocio(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostValidarEnviarDatosAprobacionTramiteNegocio", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspGetObtenerPreguntasProyectoActualizacion(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<int> tipoTramiteId, Nullable<int> tipoRolId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("TipoTramiteId", tipoTramiteId) :
                new ObjectParameter("TipoTramiteId", typeof(int));
    
            var tipoRolIdParameter = tipoRolId.HasValue ?
                new ObjectParameter("TipoRolId", tipoRolId) :
                new ObjectParameter("TipoRolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetObtenerPreguntasProyectoActualizacion", tramiteIdParameter, proyectoIdParameter, tipoTramiteIdParameter, tipoRolIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetObtenerFirmaCartaConcepto(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetObtenerFirmaCartaConcepto", tramiteIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UspPostFirmaCartaConcepto(Nullable<int> tramiteId, string radicadoSalida, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var radicadoSalidaParameter = radicadoSalida != null ?
                new ObjectParameter("radicadoSalida", radicadoSalida) :
                new ObjectParameter("radicadoSalida", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UspPostFirmaCartaConcepto", tramiteIdParameter, radicadoSalidaParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> UspGetCostosMgaVsFuentesPiip(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetCostosMgaVsFuentesPiip", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetDatosCartaConceptoCuerpoCDP_Result> uspGetDatosCartaConceptoCuerpoCDP(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosCartaConceptoCuerpoCDP_Result>("uspGetDatosCartaConceptoCuerpoCDP", tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetDatosCartaConceptoCuerpoAutorizacion_Result> uspGetDatosCartaConceptoCuerpoAutorizacion(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosCartaConceptoCuerpoAutorizacion_Result>("uspGetDatosCartaConceptoCuerpoAutorizacion", tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspPostIndicadorSecundarioProductoAgregar(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostIndicadorSecundarioProductoAgregar", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<upsGetEstadoProyectoConpes_Result> upsGetEstadoProyectoConpes(Nullable<int> proyectoId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<upsGetEstadoProyectoConpes_Result>("upsGetEstadoProyectoConpes", proyectoIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetDatosAdicionalesFinanciacion_JSON(Nullable<int> fuenteId)
        {
            var fuenteIdParameter = fuenteId.HasValue ?
                new ObjectParameter("fuenteId", fuenteId) :
                new ObjectParameter("fuenteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetDatosAdicionalesFinanciacion_JSON", fuenteIdParameter);
        }
    
        public virtual ObjectResult<uspGetDatosCartaConceptoDespedida_Result> uspGetDatosCartaConceptoDespedida(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosCartaConceptoDespedida_Result>("uspGetDatosCartaConceptoDespedida", tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspPostIndicadorProductoEliminar(Nullable<int> idIndicador, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var idIndicadorParameter = idIndicador.HasValue ?
                new ObjectParameter("IdIndicador", idIndicador) :
                new ObjectParameter("IdIndicador", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostIndicadorProductoEliminar", idIndicadorParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<UspGetEstadoCapitulos_Result> UspGetEstadoCapitulos(Nullable<int> macroproceso, Nullable<int> proyectoId, Nullable<System.Guid> instanciaId)
        {
            var macroprocesoParameter = macroproceso.HasValue ?
                new ObjectParameter("Macroproceso", macroproceso) :
                new ObjectParameter("Macroproceso", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("instanciaId", instanciaId) :
                new ObjectParameter("instanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetEstadoCapitulos_Result>("UspGetEstadoCapitulos", macroprocesoParameter, proyectoIdParameter, instanciaIdParameter);
        }
    
        public virtual int uspPostActualizaEstadoAjusteProyecto(string objetoNegocioId, Nullable<int> tramiteId, string observacion, string tipoDevolucion, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var objetoNegocioIdParameter = objetoNegocioId != null ?
                new ObjectParameter("ObjetoNegocioId", objetoNegocioId) :
                new ObjectParameter("ObjetoNegocioId", typeof(string));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var tipoDevolucionParameter = tipoDevolucion != null ?
                new ObjectParameter("tipoDevolucion", tipoDevolucion) :
                new ObjectParameter("tipoDevolucion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaEstadoAjusteProyecto", objetoNegocioIdParameter, tramiteIdParameter, observacionParameter, tipoDevolucionParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetFuentesProgramarSolicitado_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetFuentesProgramarSolicitado_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<UspGetProyectosConpes_Result> UspGetProyectosConpes(Nullable<int> proyectoId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetProyectosConpes_Result>("UspGetProyectosConpes", proyectoIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetValidarCapitulos(Nullable<int> macroproceso, Nullable<int> proyectoId, Nullable<System.Guid> instanciaId)
        {
            var macroprocesoParameter = macroproceso.HasValue ?
                new ObjectParameter("Macroproceso", macroproceso) :
                new ObjectParameter("Macroproceso", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("instanciaId", instanciaId) :
                new ObjectParameter("instanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetValidarCapitulos", macroprocesoParameter, proyectoIdParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<UspPostProyectosConpes_Result> UspPostProyectosConpes(Nullable<int> proyectoId, string json, string usuario)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspPostProyectosConpes_Result>("UspPostProyectosConpes", proyectoIdParameter, jsonParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<UspGetErroresProyecto_Result> UspGetErroresProyecto(Nullable<System.Guid> guidMacroproceso, Nullable<System.Guid> instanciaId, Nullable<int> proyectoId)
        {
            var guidMacroprocesoParameter = guidMacroproceso.HasValue ?
                new ObjectParameter("GuidMacroproceso", guidMacroproceso) :
                new ObjectParameter("GuidMacroproceso", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetErroresProyecto_Result>("UspGetErroresProyecto", guidMacroprocesoParameter, instanciaIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetFuentesTablasResumen_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetFuentesTablasResumen_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> UspGetResumenObjetivosProductosActividades_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetResumenObjetivosProductosActividades_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> UspGetCostosPIIPVsFuentesPiip_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetCostosPIIPVsFuentesPiip_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<upsGetEstadoProyectoHorizonte_Result> upsGetEstadoProyectoHorizonte(Nullable<int> proyectoId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<upsGetEstadoProyectoHorizonte_Result>("upsGetEstadoProyectoHorizonte", proyectoIdParameter);
        }
    
        public virtual int uspPostFuentesFinanciacionRecursosAjustesAgregar(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuentesFinanciacionRecursosAjustesAgregar", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetTramiteEnPasoUno_Result> uspGetTramiteEnPasoUno(Nullable<System.Guid> instanciaId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTramiteEnPasoUno_Result>("uspGetTramiteEnPasoUno", instanciaIdParameter);
        }
        public virtual int uspPostIndicadorProductoActualizar(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));

            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostIndicadorProductoActualizar", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }

        public virtual int uspPostCadenaValor_AjusteCostoActividades(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCadenaValor_AjusteCostoActividades", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> UspGetAgregarFuenteVigencia(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetAgregarFuenteVigencia", bPINParameter);
        }
    
        public virtual int uspPostCadenaValor_AgregarEntregable(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCadenaValor_AgregarEntregable", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int UspPostAgregarConpesTramite(Nullable<int> tramiteId, string usuario, string jsonConpes, ObjectParameter errorValidacionNegocio)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var jsonConpesParameter = jsonConpes != null ?
                new ObjectParameter("jsonConpes", jsonConpes) :
                new ObjectParameter("jsonConpes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostAgregarConpesTramite", tramiteIdParameter, usuarioParameter, jsonConpesParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostCadenaValor_EliminarEntregable(Nullable<int> actividadId, ObjectParameter errorValidacionNegocio)
        {
            var actividadIdParameter = actividadId.HasValue ?
                new ObjectParameter("ActividadId", actividadId) :
                new ObjectParameter("ActividadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCadenaValor_EliminarEntregable", actividadIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetFuentesFinanciacion_ObtenerDetalleAjuste(string bpin)
        {
            var bpinParameter = bpin != null ?
                new ObjectParameter("Bpin", bpin) :
                new ObjectParameter("Bpin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetFuentesFinanciacion_ObtenerDetalleAjuste", bpinParameter);
        }
    
        public virtual int uspPostProgramacionValorFuente(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostProgramacionValorFuente", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<UspGetErroresProyectoFuenteFinanciacion_Result> UspGetErroresProyectoFuenteFinanciacion(Nullable<System.Guid> guidMacroproceso, Nullable<System.Guid> instanciaId, Nullable<int> proyectoId)
        {
            var guidMacroprocesoParameter = guidMacroproceso.HasValue ?
                new ObjectParameter("GuidMacroproceso", guidMacroproceso) :
                new ObjectParameter("GuidMacroproceso", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetErroresProyectoFuenteFinanciacion_Result>("UspGetErroresProyectoFuenteFinanciacion", guidMacroprocesoParameter, instanciaIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<UspGetErroresTramite_Result> UspGetErroresTramite(Nullable<System.Guid> guidMacroproceso, Nullable<System.Guid> instanciaId, Nullable<System.Guid> accionId, string usuario, Nullable<bool> tieneCdp)
        {
            var guidMacroprocesoParameter = guidMacroproceso.HasValue ?
                new ObjectParameter("GuidMacroproceso", guidMacroproceso) :
                new ObjectParameter("GuidMacroproceso", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionIdParameter = accionId.HasValue ?
                new ObjectParameter("accionId", accionId) :
                new ObjectParameter("accionId", typeof(System.Guid));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var tieneCdpParameter = tieneCdp.HasValue ?
                new ObjectParameter("TieneCdp", tieneCdp) :
                new ObjectParameter("TieneCdp", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetErroresTramite_Result>("UspGetErroresTramite", guidMacroprocesoParameter, instanciaIdParameter, accionIdParameter, usuarioParameter, tieneCdpParameter);
        }
    
        public virtual ObjectResult<UspGetCapitulosByMacroproceso_Result> UspGetCapitulosByMacroproceso(Nullable<int> macroproceso)
        {
            var macroprocesoParameter = macroproceso.HasValue ?
                new ObjectParameter("Macroproceso", macroproceso) :
                new ObjectParameter("Macroproceso", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetCapitulosByMacroproceso_Result>("UspGetCapitulosByMacroproceso", macroprocesoParameter);
        }
    
        public virtual ObjectResult<uspGetSecciones_Result> uspGetSecciones(Nullable<System.Guid> macroprocesoId, Nullable<System.Guid> instanciaId)
        {
            var macroprocesoIdParameter = macroprocesoId.HasValue ?
                new ObjectParameter("MacroprocesoId", macroprocesoId) :
                new ObjectParameter("MacroprocesoId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSecciones_Result>("uspGetSecciones", macroprocesoIdParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasTransversalesFuentesIndicadores_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasTransversalesFuentesIndicadores_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerProyectosParaAsociarTramite_Result> uspGetObtenerProyectosParaAsociarTramite(string codbpin, Nullable<int> tramiteId)
        {
            var codbpinParameter = codbpin != null ?
                new ObjectParameter("codbpin", codbpin) :
                new ObjectParameter("codbpin", typeof(string));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerProyectosParaAsociarTramite_Result>("uspGetObtenerProyectosParaAsociarTramite", codbpinParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerProyectosParaAsociarTramiteLeyenda_Result> uspGetObtenerProyectosParaAsociarTramiteLeyenda(string codbpin, Nullable<int> tramiteId)
        {
            var codbpinParameter = codbpin != null ?
                new ObjectParameter("codbpin", codbpin) :
                new ObjectParameter("codbpin", typeof(string));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerProyectosParaAsociarTramiteLeyenda_Result>("uspGetObtenerProyectosParaAsociarTramiteLeyenda", codbpinParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerProyectoTramiteVigencia_Result> uspGetObtenerProyectoTramiteVigencia(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerProyectoTramiteVigencia_Result>("uspGetObtenerProyectoTramiteVigencia", tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetResumenObjetivosProductosActividadesJustificacion_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetResumenObjetivosProductosActividadesJustificacion_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> UspGetDesagregarRegionalizacion_Ajustes_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetDesagregarRegionalizacion_Ajustes_JSON", bPINParameter);
        }
    
        public virtual int uspPostActualizaCapituloModificado(Nullable<int> proyectoId, string usuario, string justificacion, Nullable<System.Guid> instanciaId, Nullable<int> seccionCapituloId, Nullable<int> aplicaJustificacion, Nullable<bool> cuenta, Nullable<bool> modificado)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var seccionCapituloIdParameter = seccionCapituloId.HasValue ?
                new ObjectParameter("SeccionCapituloId", seccionCapituloId) :
                new ObjectParameter("SeccionCapituloId", typeof(int));
    
            var aplicaJustificacionParameter = aplicaJustificacion.HasValue ?
                new ObjectParameter("AplicaJustificacion", aplicaJustificacion) :
                new ObjectParameter("AplicaJustificacion", typeof(int));
    
            var cuentaParameter = cuenta.HasValue ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(bool));
    
            var modificadoParameter = modificado.HasValue ?
                new ObjectParameter("Modificado", modificado) :
                new ObjectParameter("Modificado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaCapituloModificado", proyectoIdParameter, usuarioParameter, justificacionParameter, instanciaIdParameter, seccionCapituloIdParameter, aplicaJustificacionParameter, cuentaParameter, modificadoParameter);
        }
    
        public virtual ObjectResult<string> uspGetVigenciaFuturaVlrConstante_JSON(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetVigenciaFuturaVlrConstante_JSON", tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspPostIndicadoresValidarCapituloModificado(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostIndicadoresValidarCapituloModificado", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetPreguntasProyectoActualizacion_Result> uspGetPreguntasProyectoActualizacion(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<int> tipoTramiteId, Nullable<System.Guid> nivelId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("TipoTramiteId", tipoTramiteId) :
                new ObjectParameter("TipoTramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPreguntasProyectoActualizacion_Result>("uspGetPreguntasProyectoActualizacion", tramiteIdParameter, proyectoIdParameter, tipoTramiteIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<uspGetPreguntasJustificacionTramite_Result> uspGetPreguntasJustificacionTramite(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<int> tipoTramiteId, Nullable<System.Guid> nivelId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("TipoTramiteId", tipoTramiteId) :
                new ObjectParameter("TipoTramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPreguntasJustificacionTramite_Result>("uspGetPreguntasJustificacionTramite", tramiteIdParameter, proyectoIdParameter, tipoTramiteIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<string> UspGetActividadesCronograma_JSON(Nullable<System.Guid> instanciaId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetActividadesCronograma_JSON", instanciaIdParameter);
        }
    
        public virtual ObjectResult<string> UspPostDesagregarRegionalizacionAjustes(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspPostDesagregarRegionalizacionAjustes", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasTransversalesCategorias_JSON(string bPIN, Nullable<int> fuenteId, Nullable<int> politicaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var fuenteIdParameter = fuenteId.HasValue ?
                new ObjectParameter("FuenteId", fuenteId) :
                new ObjectParameter("FuenteId", typeof(int));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("PoliticaId", politicaId) :
                new ObjectParameter("PoliticaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasTransversalesCategorias_JSON", bPINParameter, fuenteIdParameter, politicaIdParameter);
        }
    
        public virtual int uspPostPoliticasTransversalesCategorias(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPoliticasTransversalesCategorias", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetDeflactores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetDeflactores");
        }
    
        public virtual ObjectResult<string> uspGetProyectoTramite(Nullable<int> proyectoId, Nullable<int> idTramite)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var idTramiteParameter = idTramite.HasValue ?
                new ObjectParameter("IdTramite", idTramite) :
                new ObjectParameter("IdTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProyectoTramite", proyectoIdParameter, idTramiteParameter);
        }
    
        public virtual ObjectResult<string> uspPostActualizaVigenciaFuturaProyectoTramite(Nullable<int> proyectoId, Nullable<int> idTramite, Nullable<bool> esConstante, Nullable<int> anioBase, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var idTramiteParameter = idTramite.HasValue ?
                new ObjectParameter("IdTramite", idTramite) :
                new ObjectParameter("IdTramite", typeof(int));
    
            var esConstanteParameter = esConstante.HasValue ?
                new ObjectParameter("EsConstante", esConstante) :
                new ObjectParameter("EsConstante", typeof(bool));
    
            var anioBaseParameter = anioBase.HasValue ?
                new ObjectParameter("AnioBase", anioBase) :
                new ObjectParameter("AnioBase", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostActualizaVigenciaFuturaProyectoTramite", proyectoIdParameter, idTramiteParameter, esConstanteParameter, anioBaseParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasTransversales_Ajustes_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasTransversales_Ajustes_JSON", bPINParameter);
        }
    
        public virtual int uspPostAgregarPoliticas_ajustes(string json, string usuario, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarPoliticas_ajustes", jsonParameter, usuarioParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostEliminarCapituloModificado(Nullable<System.Guid> instanciaId, Nullable<int> seccionCapituloId, Nullable<int> proyectoId, ObjectParameter errorValidacionNegocio)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var seccionCapituloIdParameter = seccionCapituloId.HasValue ?
                new ObjectParameter("SeccionCapituloId", seccionCapituloId) :
                new ObjectParameter("SeccionCapituloId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEliminarCapituloModificado", instanciaIdParameter, seccionCapituloIdParameter, proyectoIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetAccionActualyFinal_Result> uspGetAccionActualyFinal(Nullable<int> tramiteId, string bPINProyecto)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var bPINProyectoParameter = bPINProyecto != null ?
                new ObjectParameter("BPINProyecto", bPINProyecto) :
                new ObjectParameter("BPINProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAccionActualyFinal_Result>("uspGetAccionActualyFinal", tramiteIdParameter, bPINProyectoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspPostEliminarPermisosAccionesUsuario(string usuarioDestino, Nullable<int> tramiteId, string aliasNivel, Nullable<System.Guid> instanciaId, ObjectParameter errorValidacionNegocio)
        {
            var usuarioDestinoParameter = usuarioDestino != null ?
                new ObjectParameter("usuarioDestino", usuarioDestino) :
                new ObjectParameter("usuarioDestino", typeof(string));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var aliasNivelParameter = aliasNivel != null ?
                new ObjectParameter("aliasNivel", aliasNivel) :
                new ObjectParameter("aliasNivel", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspPostEliminarPermisosAccionesUsuario", usuarioDestinoParameter, tramiteIdParameter, aliasNivelParameter, instanciaIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetAprobacionVigenciasFuturas_JSON(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetAprobacionVigenciasFuturas_JSON", tramiteIdParameter);
        }
    
        public virtual ObjectResult<upsGetShelterAgrupacionCode_Result> upsGetShelterAgrupacionCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<upsGetShelterAgrupacionCode_Result>("upsGetShelterAgrupacionCode");
        }
    
        public virtual ObjectResult<string> FuentesFinanciacionVigenciaFuturaCorriente_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FuentesFinanciacionVigenciaFuturaCorriente_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> uspPostActualizarVigenciaFuturaFuente(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostActualizarVigenciaFuturaFuente", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetDesagregarEDT_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetDesagregarEDT_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> upsGetLocalizacionJustificacionProyecto(Nullable<int> proyectoId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("upsGetLocalizacionJustificacionProyecto", proyectoIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetSeguimientoProyectoGR(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<int> tipoTramiteId, Nullable<System.Guid> nivelId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("TipoTramiteId", tipoTramiteId) :
                new ObjectParameter("TipoTramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetSeguimientoProyectoGR", tramiteIdParameter, proyectoIdParameter, tipoTramiteIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasTransversalesCategorias_Ajustes_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasTransversalesCategorias_Ajustes_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> FuentesFinanciacionVigenciaFuturaConstante_JSON(string bPIN, Nullable<int> añoBase)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var añoBaseParameter = añoBase.HasValue ?
                new ObjectParameter("AñoBase", añoBase) :
                new ObjectParameter("AñoBase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FuentesFinanciacionVigenciaFuturaConstante_JSON", bPINParameter, añoBaseParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerSolicitarConceptoPorTramite_Result> uspGetObtenerSolicitarConceptoPorTramite(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerSolicitarConceptoPorTramite_Result>("uspGetObtenerSolicitarConceptoPorTramite", tramiteIdParameter);
        }
    
        public virtual int uspPostEnviarRespuestaConceptoDireccionTecnicaTramite(Nullable<int> tramiteId, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEnviarRespuestaConceptoDireccionTecnicaTramite", tramiteIdParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<UspGetErroresProyecto_Result> UspGetErroresPreguntasAprobacionRol(Nullable<System.Guid> guidMacroproceso, Nullable<System.Guid> instanciaId, Nullable<int> proyectoId)
        {
            var guidMacroprocesoParameter = guidMacroproceso.HasValue ?
                new ObjectParameter("GuidMacroproceso", guidMacroproceso) :
                new ObjectParameter("GuidMacroproceso", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetErroresProyecto_Result>("UspGetErroresPreguntasAprobacionRol", guidMacroprocesoParameter, instanciaIdParameter, proyectoIdParameter);
        }
    
        public virtual int uspPostPoliticasTransversalesCategoriasAjustes(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPoliticasTransversalesCategoriasAjustes", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetDatosCartaConceptoDespedida_JSON(Nullable<int> tramiteId, Nullable<int> plantillaCartaSeccionId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var plantillaCartaSeccionIdParameter = plantillaCartaSeccionId.HasValue ?
                new ObjectParameter("plantillaCartaSeccionId", plantillaCartaSeccionId) :
                new ObjectParameter("plantillaCartaSeccionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetDatosCartaConceptoDespedida_JSON", tramiteIdParameter, plantillaCartaSeccionIdParameter);
        }
    
        public virtual ObjectResult<string> uspPostAprobacionVigenciasFuturas(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostAprobacionVigenciasFuturas", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspValidaPoliticasTransversalesProyectoEliminar(Nullable<int> proyectoId, Nullable<int> politicaId, ObjectParameter respuesta)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("PoliticaId", politicaId) :
                new ObjectParameter("PoliticaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspValidaPoliticasTransversalesProyectoEliminar", proyectoIdParameter, politicaIdParameter, respuesta);
        }
    
        public virtual int uspPostPoliticasTransversalesProyectoEliminar(Nullable<int> proyectoId, Nullable<int> politicaId, ObjectParameter errorValidacionNegocio)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("PoliticaId", politicaId) :
                new ObjectParameter("PoliticaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPoliticasTransversalesProyectoEliminar", proyectoIdParameter, politicaIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostPreguntasAprobacionRol(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPreguntasAprobacionRol", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostAgregarCategoriaPolitica_ajustes(string json, string usuario, Nullable<System.Guid> formularioId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var formularioIdParameter = formularioId.HasValue ?
                new ObjectParameter("FormularioId", formularioId) :
                new ObjectParameter("FormularioId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostAgregarCategoriaPolitica_ajustes", jsonParameter, usuarioParameter, formularioIdParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasTransversalesCategorias_Ajustes_Resumen_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasTransversalesCategorias_Ajustes_Resumen_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> upsGetProyectosBeneficiarios_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("upsGetProyectosBeneficiarios_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetSeccionesPorFase_Result> uspGetSeccionesPorFase(Nullable<System.Guid> instanciaId, Nullable<System.Guid> faseId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var faseIdParameter = faseId.HasValue ?
                new ObjectParameter("FaseId", faseId) :
                new ObjectParameter("FaseId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSeccionesPorFase_Result>("uspGetSeccionesPorFase", instanciaIdParameter, faseIdParameter);
        }
    
        public virtual ObjectResult<UspGetCapitulosByMacroprocesoNivel_Result> UspGetCapitulosByMacroprocesoNivel(Nullable<int> macroproceso, Nullable<System.Guid> nIvelId, Nullable<System.Guid> flujoid)
        {
            var macroprocesoParameter = macroproceso.HasValue ?
                new ObjectParameter("Macroproceso", macroproceso) :
                new ObjectParameter("Macroproceso", typeof(int));
    
            var nIvelIdParameter = nIvelId.HasValue ?
                new ObjectParameter("NIvelId", nIvelId) :
                new ObjectParameter("NIvelId", typeof(System.Guid));
    
            var flujoidParameter = flujoid.HasValue ?
                new ObjectParameter("Flujoid", flujoid) :
                new ObjectParameter("Flujoid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetCapitulosByMacroprocesoNivel_Result>("UspGetCapitulosByMacroprocesoNivel", macroprocesoParameter, nIvelIdParameter, flujoidParameter);
        }
    
        public virtual int UspPostAgregarNivelesProductos(string usuario, string jsonNiveles, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var jsonNivelesParameter = jsonNiveles != null ?
                new ObjectParameter("jsonNiveles", jsonNiveles) :
                new ObjectParameter("jsonNiveles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostAgregarNivelesProductos", usuarioParameter, jsonNivelesParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetObtenerFuentesTramiteProyectoAprobacion_Result> uspGetObtenerFuentesTramiteProyectoAprobacion(Nullable<int> proyectoId, Nullable<int> tramiteId, string tipoProyecto)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var tipoProyectoParameter = tipoProyecto != null ?
                new ObjectParameter("TipoProyecto", tipoProyecto) :
                new ObjectParameter("TipoProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerFuentesTramiteProyectoAprobacion_Result>("uspGetObtenerFuentesTramiteProyectoAprobacion", proyectoIdParameter, tramiteIdParameter, tipoProyectoParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerProyectosTramiteNegocioAprobacion_Result> uspGetObtenerProyectosTramiteNegocioAprobacion(Nullable<int> tramiteId, Nullable<int> tipoRol)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var tipoRolParameter = tipoRol.HasValue ?
                new ObjectParameter("TipoRol", tipoRol) :
                new ObjectParameter("TipoRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerProyectosTramiteNegocioAprobacion_Result>("uspGetObtenerProyectosTramiteNegocioAprobacion", tramiteIdParameter, tipoRolParameter);
        }
    
        public virtual ObjectResult<uspGetPreguntasConceptoDireccionTecnicaTramite_Result> uspGetPreguntasConceptoDireccionTecnicaTramite(Nullable<int> tramiteId, Nullable<System.Guid> nivelId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPreguntasConceptoDireccionTecnicaTramite_Result>("uspGetPreguntasConceptoDireccionTecnicaTramite", tramiteIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<string> upsGetActividadesPreContratuales_JSON(Nullable<int> modalidadId, Nullable<int> proyectoId, Nullable<int> tramiteId, Nullable<bool> eliminarActividades)
        {
            var modalidadIdParameter = modalidadId.HasValue ?
                new ObjectParameter("ModalidadId", modalidadId) :
                new ObjectParameter("ModalidadId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var eliminarActividadesParameter = eliminarActividades.HasValue ?
                new ObjectParameter("eliminarActividades", eliminarActividades) :
                new ObjectParameter("eliminarActividades", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("upsGetActividadesPreContratuales_JSON", modalidadIdParameter, proyectoIdParameter, tramiteIdParameter, eliminarActividadesParameter);
        }
    
        public virtual int UspPostActividadesCronograma(Nullable<int> id, Nullable<int> proyectoId, Nullable<int> tramiteId, string nombreActividad, Nullable<int> actividadesPreContractualesId, Nullable<int> modalidadContratacionId, Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal, string usuario, ObjectParameter errorValidacionNegocio, ObjectParameter cronogramaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var nombreActividadParameter = nombreActividad != null ?
                new ObjectParameter("NombreActividad", nombreActividad) :
                new ObjectParameter("NombreActividad", typeof(string));
    
            var actividadesPreContractualesIdParameter = actividadesPreContractualesId.HasValue ?
                new ObjectParameter("ActividadesPreContractualesId", actividadesPreContractualesId) :
                new ObjectParameter("ActividadesPreContractualesId", typeof(int));
    
            var modalidadContratacionIdParameter = modalidadContratacionId.HasValue ?
                new ObjectParameter("ModalidadContratacionId", modalidadContratacionId) :
                new ObjectParameter("ModalidadContratacionId", typeof(int));
    
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("FechaInicial", fechaInicial) :
                new ObjectParameter("FechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostActividadesCronograma", idParameter, proyectoIdParameter, tramiteIdParameter, nombreActividadParameter, actividadesPreContractualesIdParameter, modalidadContratacionIdParameter, fechaInicialParameter, fechaFinalParameter, usuarioParameter, errorValidacionNegocio, cronogramaId);
        }
    
        public virtual ObjectResult<UspGetModalidadesContratacion_Result> UspGetModalidadesContratacion(Nullable<int> mostrar)
        {
            var mostrarParameter = mostrar.HasValue ?
                new ObjectParameter("mostrar", mostrar) :
                new ObjectParameter("mostrar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetModalidadesContratacion_Result>("UspGetModalidadesContratacion", mostrarParameter);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasCategoriasIndicadores_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasCategoriasIndicadores_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> upsGetJustificaionRegionalizacion_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("upsGetJustificaionRegionalizacion_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<UspGetErroresViabilidad_Result> UspGetErroresViabilidad(Nullable<System.Guid> guidMacroproceso, Nullable<int> proyectoId, Nullable<System.Guid> nivelId, Nullable<System.Guid> instanciaId)
        {
            var guidMacroprocesoParameter = guidMacroproceso.HasValue ?
                new ObjectParameter("GuidMacroproceso", guidMacroproceso) :
                new ObjectParameter("GuidMacroproceso", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetErroresViabilidad_Result>("UspGetErroresViabilidad", guidMacroprocesoParameter, proyectoIdParameter, nivelIdParameter, instanciaIdParameter);
        }
    
        public virtual int uspPostCategoriasIndicadores(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCategoriasIndicadores", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetPreguntasAprobacionJefePlaneacion(Nullable<int> tramiteId, Nullable<int> proyectoId, Nullable<int> tipoTramiteId, Nullable<System.Guid> nivelId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("TipoTramiteId", tipoTramiteId) :
                new ObjectParameter("TipoTramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPreguntasAprobacionJefePlaneacion", tramiteIdParameter, proyectoIdParameter, tipoTramiteIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<string> ProductosVigenciaFuturaConstante_JSON(string bPIN, Nullable<int> tramiteId, Nullable<int> añoBase)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var añoBaseParameter = añoBase.HasValue ?
                new ObjectParameter("AñoBase", añoBase) :
                new ObjectParameter("AñoBase", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProductosVigenciaFuturaConstante_JSON", bPINParameter, tramiteIdParameter, añoBaseParameter);
        }
    
        public virtual ObjectResult<string> uspPostActualizarVigenciaFuturaProducto(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostActualizarVigenciaFuturaProducto", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspPostPreguntasAprobacionJefePlaneacion(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostPreguntasAprobacionJefePlaneacion", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> ProductosVigenciaFuturaCorriente_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ProductosVigenciaFuturaCorriente_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<UspGetInstanciaProyectoTramite_Result> UspGetInstanciaProyectoTramite(Nullable<System.Guid> instanciaId, string bPIN)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetInstanciaProyectoTramite_Result>("UspGetInstanciaProyectoTramite", instanciaIdParameter, bPINParameter);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasTransversalesCategorias_ObtenerDetalleAjuste(string bpin)
        {
            var bpinParameter = bpin != null ?
                new ObjectParameter("Bpin", bpin) :
                new ObjectParameter("Bpin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasTransversalesCategorias_ObtenerDetalleAjuste", bpinParameter);
        }
    
        public virtual ObjectResult<uspGetProyectoRequisitosPorTramiteCRP_Result> uspGetProyectoRequisitosPorTramiteCRP(Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectoRequisitosPorTramiteCRP_Result>("uspGetProyectoRequisitosPorTramiteCRP", proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual int uspPostActualizaValoresTipoRequisitoCRP(string json, string usuario, Nullable<System.Guid> instanciaId, Nullable<int> entidadId, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("instanciaId", instanciaId) :
                new ObjectParameter("instanciaId", typeof(System.Guid));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaValoresTipoRequisitoCRP", jsonParameter, usuarioParameter, instanciaIdParameter, entidadIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostPreguntasAprobacionJefePlanea(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostPreguntasAprobacionJefePlanea", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostEliminarCategoriasProyecto(Nullable<int> proyectoId, Nullable<int> politicaId, Nullable<int> dimensionId, ObjectParameter errorValidacionNegocio)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("PoliticaId", politicaId) :
                new ObjectParameter("PoliticaId", typeof(int));
    
            var dimensionIdParameter = dimensionId.HasValue ?
                new ObjectParameter("DimensionId", dimensionId) :
                new ObjectParameter("DimensionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEliminarCategoriasProyecto", proyectoIdParameter, politicaIdParameter, dimensionIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostBeneficiarioTotales(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostBeneficiarioTotales", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetVigencias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetVigencias");
        }
    
        public virtual ObjectResult<uspGetTipoDocumentosSoportePorNivel_Result> uspGetTipoDocumentosSoportePorNivel(Nullable<int> tipoTramiteId, Nullable<System.Guid> rolId, Nullable<System.Guid> nivelId)
        {
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("tipoTramiteId", tipoTramiteId) :
                new ObjectParameter("tipoTramiteId", typeof(int));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("rolId", rolId) :
                new ObjectParameter("rolId", typeof(System.Guid));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("nivelId", nivelId) :
                new ObjectParameter("nivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTipoDocumentosSoportePorNivel_Result>("uspGetTipoDocumentosSoportePorNivel", tipoTramiteIdParameter, rolIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetOtrasPoliticasJustificacion_Ajustes_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetOtrasPoliticasJustificacion_Ajustes_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> uspGetCrucePoliticasAjustes_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCrucePoliticasAjustes_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetDatosUsuario_Result> uspGetDatosUsuario(string idUsuarioDnp, Nullable<int> idEntidad, Nullable<System.Guid> idAccion, Nullable<System.Guid> idInstancia)
        {
            var idUsuarioDnpParameter = idUsuarioDnp != null ?
                new ObjectParameter("idUsuarioDnp", idUsuarioDnp) :
                new ObjectParameter("idUsuarioDnp", typeof(string));
    
            var idEntidadParameter = idEntidad.HasValue ?
                new ObjectParameter("idEntidad", idEntidad) :
                new ObjectParameter("idEntidad", typeof(int));
    
            var idAccionParameter = idAccion.HasValue ?
                new ObjectParameter("idAccion", idAccion) :
                new ObjectParameter("idAccion", typeof(System.Guid));
    
            var idInstanciaParameter = idInstancia.HasValue ?
                new ObjectParameter("idInstancia", idInstancia) :
                new ObjectParameter("idInstancia", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDatosUsuario_Result>("uspGetDatosUsuario", idUsuarioDnpParameter, idEntidadParameter, idAccionParameter, idInstanciaParameter);
        }
    
        public virtual int UspPostAgregarActividadesProductos(string usuario, string jsonNiveles, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var jsonNivelesParameter = jsonNiveles != null ?
                new ObjectParameter("jsonNiveles", jsonNiveles) :
                new ObjectParameter("jsonNiveles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostAgregarActividadesProductos", usuarioParameter, jsonNivelesParameter, errorValidacionNegocio);
        }
    
        public virtual int UspPostEliminarNivelesProductos(string usuario, string jsonNiveles, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var jsonNivelesParameter = jsonNiveles != null ?
                new ObjectParameter("jsonNiveles", jsonNiveles) :
                new ObjectParameter("jsonNiveles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostEliminarNivelesProductos", usuarioParameter, jsonNivelesParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostBeneficiarioProducto(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostBeneficiarioProducto", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetObtenerModificacionProyectoTramiteLeyenda_Result> uspGetObtenerModificacionProyectoTramiteLeyenda(Nullable<int> tramiteproyectoId)
        {
            var tramiteproyectoIdParameter = tramiteproyectoId.HasValue ?
                new ObjectParameter("tramiteproyectoId", tramiteproyectoId) :
                new ObjectParameter("tramiteproyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerModificacionProyectoTramiteLeyenda_Result>("uspGetObtenerModificacionProyectoTramiteLeyenda", tramiteproyectoIdParameter);
        }
    
        public virtual ObjectResult<uspGetProyectosDatosBasicos_Result> uspGetProyectosDatosBasicos(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectosDatosBasicos_Result>("uspGetProyectosDatosBasicos", bPINParameter);
        }
    
        public virtual ObjectResult<string> uspPostModificacionLeyenda(Nullable<int> tramiteproyectoId, Nullable<int> tipoUpdate, string nombreProyecto, string justificacion, Nullable<bool> errorAritmetico, Nullable<bool> errorTranscripcion, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var tramiteproyectoIdParameter = tramiteproyectoId.HasValue ?
                new ObjectParameter("tramiteproyectoId", tramiteproyectoId) :
                new ObjectParameter("tramiteproyectoId", typeof(int));
    
            var tipoUpdateParameter = tipoUpdate.HasValue ?
                new ObjectParameter("tipoUpdate", tipoUpdate) :
                new ObjectParameter("tipoUpdate", typeof(int));
    
            var nombreProyectoParameter = nombreProyecto != null ?
                new ObjectParameter("nombreProyecto", nombreProyecto) :
                new ObjectParameter("nombreProyecto", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            var errorAritmeticoParameter = errorAritmetico.HasValue ?
                new ObjectParameter("errorAritmetico", errorAritmetico) :
                new ObjectParameter("errorAritmetico", typeof(bool));
    
            var errorTranscripcionParameter = errorTranscripcion.HasValue ?
                new ObjectParameter("errorTranscripcion", errorTranscripcion) :
                new ObjectParameter("errorTranscripcion", typeof(bool));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostModificacionLeyenda", tramiteproyectoIdParameter, tipoUpdateParameter, nombreProyectoParameter, justificacionParameter, errorAritmeticoParameter, errorTranscripcionParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetObtenerSubdireccionesTecnicas_Result> uspGetObtenerDireccionesTecnicas(Nullable<System.Guid> idNegocioEntidad)
        {
            var idNegocioEntidadParameter = idNegocioEntidad.HasValue ?
                new ObjectParameter("idNegocioEntidad", idNegocioEntidad) :
                new ObjectParameter("idNegocioEntidad", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerSubdireccionesTecnicas_Result>("uspGetObtenerDireccionesTecnicas", idNegocioEntidadParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerSubdireccionesTecnicas_Result> uspGetObtenerSubdireccionesTecnicas(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerSubdireccionesTecnicas_Result>("uspGetObtenerSubdireccionesTecnicas", parentIdParameter);
        }
    
        public virtual int uspPostBeneficiarioProductoLocalizacion(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostBeneficiarioProductoLocalizacion", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostBeneficiarioProductoLocalizacionCaracterizacion(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostBeneficiarioProductoLocalizacionCaracterizacion", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetObtenerPreguntasEspecificasCustom_Result> uspGetObtenerPreguntasEspecificasCustom(string bPIN, Nullable<System.Guid> nivelId, Nullable<System.Guid> instanciaId, string listaRoles_Json)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var listaRoles_JsonParameter = listaRoles_Json != null ?
                new ObjectParameter("ListaRoles_Json", listaRoles_Json) :
                new ObjectParameter("ListaRoles_Json", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerPreguntasEspecificasCustom_Result>("uspGetObtenerPreguntasEspecificasCustom", bPINParameter, nivelIdParameter, instanciaIdParameter, listaRoles_JsonParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerPreguntasGeneralesCustom_Result> uspGetObtenerPreguntasGeneralesCustom(string bPIN, Nullable<System.Guid> nivelId, Nullable<System.Guid> instanciaId, string listaRoles)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var listaRolesParameter = listaRoles != null ?
                new ObjectParameter("ListaRoles", listaRoles) :
                new ObjectParameter("ListaRoles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerPreguntasGeneralesCustom_Result>("uspGetObtenerPreguntasGeneralesCustom", bPINParameter, nivelIdParameter, instanciaIdParameter, listaRolesParameter);
        }
    
        public virtual ObjectResult<UspValidacionDescargregarEdt_Result> UspValidacionDescargregarEdt(Nullable<int> proyectoId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspValidacionDescargregarEdt_Result>("UspValidacionDescargregarEdt", proyectoIdParameter);
        }
    
        public virtual ObjectResult<UspGetErroresProyectoSeccionDesagregarEdt_Result> UspGetErroresProyectoSeccionDesagregarEdt(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, Nullable<int> faseId, Nullable<int> pasoFaseId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var faseIdParameter = faseId.HasValue ?
                new ObjectParameter("FaseId", faseId) :
                new ObjectParameter("FaseId", typeof(int));
    
            var pasoFaseIdParameter = pasoFaseId.HasValue ?
                new ObjectParameter("PasoFaseId", pasoFaseId) :
                new ObjectParameter("PasoFaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetErroresProyectoSeccionDesagregarEdt_Result>("UspGetErroresProyectoSeccionDesagregarEdt", instanciaIdParameter, proyectoIdParameter, faseIdParameter, pasoFaseIdParameter);
        }
    
        public virtual ObjectResult<UspGetDatosFaseMacroproceso_Result> UspGetDatosFaseMacroproceso(string guidMacroproceso, string instanciaId, Nullable<int> proyectoId)
        {
            var guidMacroprocesoParameter = guidMacroproceso != null ?
                new ObjectParameter("GuidMacroproceso", guidMacroproceso) :
                new ObjectParameter("GuidMacroproceso", typeof(string));
    
            var instanciaIdParameter = instanciaId != null ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(string));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetDatosFaseMacroproceso_Result>("UspGetDatosFaseMacroproceso", guidMacroprocesoParameter, instanciaIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<uspGetDetalleCartaAclaracionLeyendaProyecto_Result> uspGetDetalleCartaAclaracionLeyendaProyecto(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDetalleCartaAclaracionLeyendaProyecto_Result>("uspGetDetalleCartaAclaracionLeyendaProyecto", tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetDatosInstanciaPriorizacion(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetDatosInstanciaPriorizacion", bPINParameter);
        }
    
        public virtual ObjectResult<uspGetProyectosCartaTramiteVfo_Result> uspGetProyectosCartaTramiteVfo(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectosCartaTramiteVfo_Result>("uspGetProyectosCartaTramiteVfo", tramiteIdParameter);
        }
    
        public virtual int UspPostEliminarActividadesCronograma(Nullable<int> id, Nullable<int> proyectoId, Nullable<int> tramiteId, string nombreActividad, Nullable<int> actividadesPreContractualesId, Nullable<int> modalidadContratacionId, Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal, string usuario, Nullable<bool> eliminar, ObjectParameter errorValidacionNegocio, ObjectParameter cronogramaId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            var nombreActividadParameter = nombreActividad != null ?
                new ObjectParameter("NombreActividad", nombreActividad) :
                new ObjectParameter("NombreActividad", typeof(string));
    
            var actividadesPreContractualesIdParameter = actividadesPreContractualesId.HasValue ?
                new ObjectParameter("ActividadesPreContractualesId", actividadesPreContractualesId) :
                new ObjectParameter("ActividadesPreContractualesId", typeof(int));
    
            var modalidadContratacionIdParameter = modalidadContratacionId.HasValue ?
                new ObjectParameter("ModalidadContratacionId", modalidadContratacionId) :
                new ObjectParameter("ModalidadContratacionId", typeof(int));
    
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("FechaInicial", fechaInicial) :
                new ObjectParameter("FechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var eliminarParameter = eliminar.HasValue ?
                new ObjectParameter("Eliminar", eliminar) :
                new ObjectParameter("Eliminar", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostEliminarActividadesCronograma", idParameter, proyectoIdParameter, tramiteIdParameter, nombreActividadParameter, actividadesPreContractualesIdParameter, modalidadContratacionIdParameter, fechaInicialParameter, fechaFinalParameter, usuarioParameter, eliminarParameter, errorValidacionNegocio, cronogramaId);
        }
    
        public virtual ObjectResult<uspGetUnidadesMedidas_Result> uspGetUnidadesMedidas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUnidadesMedidas_Result>("uspGetUnidadesMedidas");
        }
    
        public virtual int spDeleteMatrizEntidadDestinoAccionUnidad(Nullable<int> id, Nullable<int> entidadResponsableId, Nullable<int> sectorId, Nullable<System.Guid> rolId, Nullable<int> entidadDestinoAccionId, ObjectParameter result)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("SectorId", sectorId) :
                new ObjectParameter("SectorId", typeof(int));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(System.Guid));
    
            var entidadDestinoAccionIdParameter = entidadDestinoAccionId.HasValue ?
                new ObjectParameter("EntidadDestinoAccionId", entidadDestinoAccionId) :
                new ObjectParameter("EntidadDestinoAccionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteMatrizEntidadDestinoAccionUnidad", idParameter, entidadResponsableIdParameter, sectorIdParameter, rolIdParameter, entidadDestinoAccionIdParameter, result);
        }
    
        public virtual ObjectResult<spGetMatrizEntidadDestinoAccionUnidad_Result> spGetMatrizEntidadDestinoAccionUnidad(Nullable<int> entidadResponsableId, string jsonDataSector, string jsonDataEntidad)
        {
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            var jsonDataSectorParameter = jsonDataSector != null ?
                new ObjectParameter("JsonDataSector", jsonDataSector) :
                new ObjectParameter("JsonDataSector", typeof(string));
    
            var jsonDataEntidadParameter = jsonDataEntidad != null ?
                new ObjectParameter("JsonDataEntidad", jsonDataEntidad) :
                new ObjectParameter("JsonDataEntidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetMatrizEntidadDestinoAccionUnidad_Result>("spGetMatrizEntidadDestinoAccionUnidad", entidadResponsableIdParameter, jsonDataSectorParameter, jsonDataEntidadParameter);
        }
    
        public virtual int spInsertMatrizEntidadDestinoAccionUnidad(Nullable<int> entidadResponsableId, Nullable<int> sectorId, Nullable<System.Guid> rolId, Nullable<int> entidadDestinoAccionId, string usuario, ObjectParameter id)
        {
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            var sectorIdParameter = sectorId.HasValue ?
                new ObjectParameter("SectorId", sectorId) :
                new ObjectParameter("SectorId", typeof(int));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(System.Guid));
    
            var entidadDestinoAccionIdParameter = entidadDestinoAccionId.HasValue ?
                new ObjectParameter("EntidadDestinoAccionId", entidadDestinoAccionId) :
                new ObjectParameter("EntidadDestinoAccionId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertMatrizEntidadDestinoAccionUnidad", entidadResponsableIdParameter, sectorIdParameter, rolIdParameter, entidadDestinoAccionIdParameter, usuarioParameter, id);
        }
    
        public virtual ObjectResult<spGetTransferConfigurationUnidad_Result> spGetTransferConfigurationUnidad(Nullable<int> entidadResponsableId)
        {
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTransferConfigurationUnidad_Result>("spGetTransferConfigurationUnidad", entidadResponsableIdParameter);
        }
    
        public virtual int spUpdateTransferConfigurationUnidad(Nullable<int> entidadResponsableId, Nullable<int> flowCatalogId, Nullable<System.Guid> flow)
        {
            var entidadResponsableIdParameter = entidadResponsableId.HasValue ?
                new ObjectParameter("EntidadResponsableId", entidadResponsableId) :
                new ObjectParameter("EntidadResponsableId", typeof(int));
    
            var flowCatalogIdParameter = flowCatalogId.HasValue ?
                new ObjectParameter("FlowCatalogId", flowCatalogId) :
                new ObjectParameter("FlowCatalogId", typeof(int));
    
            var flowParameter = flow.HasValue ?
                new ObjectParameter("Flow", flow) :
                new ObjectParameter("Flow", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateTransferConfigurationUnidad", entidadResponsableIdParameter, flowCatalogIdParameter, flowParameter);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasSolicitudConcepto_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasSolicitudConcepto_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetDevolucionAmpliarConcepto(Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetDevolucionAmpliarConcepto", proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<uspGetObtenerDatosProyectoConceptoPorInstancia_Result> uspGetObtenerDatosProyectoConceptoPorInstancia(Nullable<System.Guid> instancia)
        {
            var instanciaParameter = instancia.HasValue ?
                new ObjectParameter("instancia", instancia) :
                new ObjectParameter("instancia", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerDatosProyectoConceptoPorInstancia_Result>("uspGetObtenerDatosProyectoConceptoPorInstancia", instanciaParameter);
        }
    
        public virtual ObjectResult<string> uspGetFuentesSGR_JSON(string bPIN, Nullable<System.Guid> instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetFuentesSGR_JSON", bPINParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetResumenFuentesCostosSGR_JSON(string bPIN, Nullable<System.Guid> instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetResumenFuentesCostosSGR_JSON", bPINParameter, instanciaIdParameter);
        }
    
        public virtual int uspPostFuentesSGRAgregar(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuentesSGRAgregar", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetProgramarActividades_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProgramarActividades_JSON", bPINParameter);
        }
    
        public virtual ObjectResult<string> uspGetPoliticasJustificacionAjustes_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPoliticasJustificacionAjustes_JSON", bPINParameter);
        }
    
        public virtual int uspPostFocalizacionActualizaPoliticasModificadas(Nullable<int> proyectoId, string usuario, string justificacion, Nullable<System.Guid> instanciaId, Nullable<int> seccionCapituloId, Nullable<int> politicaId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var seccionCapituloIdParameter = seccionCapituloId.HasValue ?
                new ObjectParameter("SeccionCapituloId", seccionCapituloId) :
                new ObjectParameter("SeccionCapituloId", typeof(int));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("PoliticaId", politicaId) :
                new ObjectParameter("PoliticaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFocalizacionActualizaPoliticasModificadas", proyectoIdParameter, usuarioParameter, justificacionParameter, instanciaIdParameter, seccionCapituloIdParameter, politicaIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetLiberacionVF(Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetLiberacionVF", proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspPostSetAutorizacionVigenciaFutura(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostSetAutorizacionVigenciaFutura", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetFuentesNoSGR_JSON(string bPIN, Nullable<System.Guid> instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetFuentesNoSGR_JSON", bPINParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetProyectoDelegarViabilidad_JSON(string bPIN, Nullable<System.Guid> instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProyectoDelegarViabilidad_JSON", bPINParameter, instanciaIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetProyectoEntidadesDelegar_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProyectoEntidadesDelegar_JSON", bPINParameter);
        }
    
        public virtual int uspPostFuentesNoSGRAgregar(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuentesNoSGRAgregar", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostFuentesNoSGRCofinanciadorAgregar(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFuentesNoSGRCofinanciadorAgregar", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetDatosAdicionalesCofinanciadorNoSGR_JSON(string bPIN, Nullable<int> vigencia, Nullable<int> vigenciaFuente)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var vigenciaParameter = vigencia.HasValue ?
                new ObjectParameter("Vigencia", vigencia) :
                new ObjectParameter("Vigencia", typeof(int));
    
            var vigenciaFuenteParameter = vigenciaFuente.HasValue ?
                new ObjectParameter("VigenciaFuente", vigenciaFuente) :
                new ObjectParameter("VigenciaFuente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetDatosAdicionalesCofinanciadorNoSGR_JSON", bPINParameter, vigenciaParameter, vigenciaFuenteParameter);
        }
    
        public virtual int UspPostEditarProgramarActividades(string usuario, string jsonNiveles, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var jsonNivelesParameter = jsonNiveles != null ?
                new ObjectParameter("jsonNiveles", jsonNiveles) :
                new ObjectParameter("jsonNiveles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostEditarProgramarActividades", usuarioParameter, jsonNivelesParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetOperacionesCredito(string bPIN, Nullable<System.Guid> instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetOperacionesCredito", bPINParameter, instanciaIdParameter);
        }
    
        public virtual int UspPostOperacionesCredito(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostOperacionesCredito", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> UspGetDireccionesTecnicasPoliticas_JSON()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UspGetDireccionesTecnicasPoliticas_JSON");
        }
    
        public virtual int uspPostFocalizacionSolicitarConceptoDT(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFocalizacionSolicitarConceptoDT", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetObtenerEntidadesParaAsociar_Result> uspGetObtenerEntidadesParaAsociar(Nullable<System.Guid> instanciaId, string accionTramiteProyecto)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var accionTramiteProyectoParameter = accionTramiteProyecto != null ?
                new ObjectParameter("accionTramiteProyecto", accionTramiteProyecto) :
                new ObjectParameter("accionTramiteProyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetObtenerEntidadesParaAsociar_Result>("uspGetObtenerEntidadesParaAsociar", instanciaIdParameter, accionTramiteProyectoParameter);
        }
    
        public virtual ObjectResult<uspEntidades_Result> uspEntidades(string entidades)
        {
            var entidadesParameter = entidades != null ?
                new ObjectParameter("Entidades", entidades) :
                new ObjectParameter("Entidades", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspEntidades_Result>("uspEntidades", entidadesParameter);
        }
    
        public virtual int uspGetValidacion_excedePeriodoPresidencial_Resultado(Nullable<int> tramiteId, ObjectParameter resultado)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetValidacion_excedePeriodoPresidencial_Resultado", tramiteIdParameter, resultado);
        }
    
        public virtual int uspPostDelegarViabilidadAgregar(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostDelegarViabilidadAgregar", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<Nullable<int>> uspPostActualizaEjecutor(string nit, string digito, string nombreEjecutor, Nullable<int> entityTypeId, string creadoPor, string modificadoPor, Nullable<System.DateTime> fechaModificacion, Nullable<bool> activo)
        {
            var nitParameter = nit != null ?
                new ObjectParameter("Nit", nit) :
                new ObjectParameter("Nit", typeof(string));
    
            var digitoParameter = digito != null ?
                new ObjectParameter("Digito", digito) :
                new ObjectParameter("Digito", typeof(string));
    
            var nombreEjecutorParameter = nombreEjecutor != null ?
                new ObjectParameter("NombreEjecutor", nombreEjecutor) :
                new ObjectParameter("NombreEjecutor", typeof(string));
    
            var entityTypeIdParameter = entityTypeId.HasValue ?
                new ObjectParameter("EntityTypeId", entityTypeId) :
                new ObjectParameter("EntityTypeId", typeof(int));
    
            var creadoPorParameter = creadoPor != null ?
                new ObjectParameter("CreadoPor", creadoPor) :
                new ObjectParameter("CreadoPor", typeof(string));
    
            var modificadoPorParameter = modificadoPor != null ?
                new ObjectParameter("ModificadoPor", modificadoPor) :
                new ObjectParameter("ModificadoPor", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspPostActualizaEjecutor", nitParameter, digitoParameter, nombreEjecutorParameter, entityTypeIdParameter, creadoPorParameter, modificadoPorParameter, fechaModificacionParameter, activoParameter);
        }
    
        public virtual ObjectResult<uspProyectosPorEntidades_Result> uspProyectosPorEntidades(string entidades, string estados)
        {
            var entidadesParameter = entidades != null ?
                new ObjectParameter("Entidades", entidades) :
                new ObjectParameter("Entidades", typeof(string));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("Estados", estados) :
                new ObjectParameter("Estados", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspProyectosPorEntidades_Result>("uspProyectosPorEntidades", entidadesParameter, estadosParameter);
        }
    
        public virtual ObjectResult<string> uspPostSetAutorizacionVigenciasFuturasValores(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspPostSetAutorizacionVigenciasFuturasValores", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetResumenSolicitudConcepto_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetResumenSolicitudConcepto_JSON", bPINParameter);
        }
    
        public virtual int uspPostGuardarMontosTramite(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostGuardarMontosTramite", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<uspGetProyectoFuentePresupuestalPorTramite_Traslado_Result> uspGetProyectoFuentePresupuestalPorTramite_Traslado(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectoFuentePresupuestalPorTramite_Traslado_Result>("uspGetProyectoFuentePresupuestalPorTramite_Traslado", tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetCategoriaSubcategoria_JSON(Nullable<int> padreId, Nullable<int> entidadId, Nullable<int> esCategoria, Nullable<int> esGruposEtnicos)
        {
            var padreIdParameter = padreId.HasValue ?
                new ObjectParameter("padreId", padreId) :
                new ObjectParameter("padreId", typeof(int));
    
            var entidadIdParameter = entidadId.HasValue ?
                new ObjectParameter("entidadId", entidadId) :
                new ObjectParameter("entidadId", typeof(int));
    
            var esCategoriaParameter = esCategoria.HasValue ?
                new ObjectParameter("esCategoria", esCategoria) :
                new ObjectParameter("esCategoria", typeof(int));
    
            var esGruposEtnicosParameter = esGruposEtnicos.HasValue ?
                new ObjectParameter("esGruposEtnicos", esGruposEtnicos) :
                new ObjectParameter("esGruposEtnicos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetCategoriaSubcategoria_JSON", padreIdParameter, entidadIdParameter, esCategoriaParameter, esGruposEtnicosParameter);
        }
    
        public virtual ObjectResult<UspGetTramitesVFaLiberar_Result> UspGetTramitesVFaLiberar(string numTramite)
        {
            var numTramiteParameter = numTramite != null ?
                new ObjectParameter("numTramite", numTramite) :
                new ObjectParameter("numTramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspGetTramitesVFaLiberar_Result>("UspGetTramitesVFaLiberar", numTramiteParameter);
        }
    
        public virtual ObjectResult<uspGetTipoDocumentosSoportePorRol_Result> uspGetTipoDocumentosSoportePorRol(Nullable<int> tipoTramiteId, Nullable<System.Guid> rol, Nullable<int> tramiteId, Nullable<int> nivelId)
        {
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("tipoTramiteId", tipoTramiteId) :
                new ObjectParameter("tipoTramiteId", typeof(int));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(System.Guid));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("nivelId", nivelId) :
                new ObjectParameter("nivelId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTipoDocumentosSoportePorRol_Result>("uspGetTipoDocumentosSoportePorRol", tipoTramiteIdParameter, rolParameter, tramiteIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetResumenAutorizacionesVerificadasVF(Nullable<int> proyectoId, Nullable<int> tramiteId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetResumenAutorizacionesVerificadasVF", proyectoIdParameter, tramiteIdParameter);
        }
    
        public virtual int UspPostEditarActividadProgramacionSeguimientoPeriodosValores(string usuario, string jsonNiveles, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var jsonNivelesParameter = jsonNiveles != null ?
                new ObjectParameter("jsonNiveles", jsonNiveles) :
                new ObjectParameter("jsonNiveles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostEditarActividadProgramacionSeguimientoPeriodosValores", usuarioParameter, jsonNivelesParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetTramiteAjusteEnPasoUno(Nullable<int> tramiteId, Nullable<int> proyectoId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetTramiteAjusteEnPasoUno", tramiteIdParameter, proyectoIdParameter);
        }
    
        public virtual ObjectResult<uspGetPreguntasJustificacionTramite_Proyectos_Result> uspGetPreguntasJustificacionTramite_Proyectos(Nullable<int> tramiteId, Nullable<int> tipoTramiteId, Nullable<System.Guid> nivelId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var tipoTramiteIdParameter = tipoTramiteId.HasValue ?
                new ObjectParameter("TipoTramiteId", tipoTramiteId) :
                new ObjectParameter("TipoTramiteId", typeof(int));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetPreguntasJustificacionTramite_Proyectos_Result>("uspGetPreguntasJustificacionTramite_Proyectos", tramiteIdParameter, tipoTramiteIdParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetPreguntasEnvioPoliticaSubDireccion(Nullable<System.Guid> instanciaId, Nullable<int> proyectoId, string usuario, Nullable<System.Guid> nivelId)
        {
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nivelIdParameter = nivelId.HasValue ?
                new ObjectParameter("NivelId", nivelId) :
                new ObjectParameter("NivelId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetPreguntasEnvioPoliticaSubDireccion", instanciaIdParameter, proyectoIdParameter, usuarioParameter, nivelIdParameter);
        }
    
        public virtual ObjectResult<uspGetEjecutor_Result> uspGetEjecutor(Nullable<int> tipoEntidadId)
        {
            var tipoEntidadIdParameter = tipoEntidadId.HasValue ?
                new ObjectParameter("tipoEntidadId", tipoEntidadId) :
                new ObjectParameter("tipoEntidadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEjecutor_Result>("uspGetEjecutor", tipoEntidadIdParameter);
        }
    
        public virtual ObjectResult<uspGetProyectoFuentePresupuestalAprobadoPorTramite_Traslado_Result> uspGetProyectoFuentePresupuestalAprobadoPorTramite_Traslado(Nullable<int> tramiteId)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("TramiteId", tramiteId) :
                new ObjectParameter("TramiteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProyectoFuentePresupuestalAprobadoPorTramite_Traslado_Result>("uspGetProyectoFuentePresupuestalAprobadoPorTramite_Traslado", tramiteIdParameter);
        }
    
        public virtual ObjectResult<string> uspGetOperacionesCreditoDetalle_JSON(string bPIN, Nullable<System.Guid> instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetOperacionesCreditoDetalle_JSON", bPINParameter, instanciaIdParameter);
        }
        public virtual int uspPostOperacionCreditoDetalle_JSON(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));

            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostOperacionCreditoDetalle_JSON", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }

        public virtual int uspPostCrucePoliticasAjustes(string json, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var jsonParameter = json != null ?
                new ObjectParameter("json", json) :
                new ObjectParameter("json", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostCrucePoliticasAjustes", jsonParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostEjecutoresAsociados(Nullable<int> proyectoId, Nullable<int> ejecutorId, string usuario, Nullable<int> tipoEjecutorId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var ejecutorIdParameter = ejecutorId.HasValue ?
                new ObjectParameter("ejecutorId", ejecutorId) :
                new ObjectParameter("ejecutorId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var tipoEjecutorIdParameter = tipoEjecutorId.HasValue ?
                new ObjectParameter("tipoEjecutorId", tipoEjecutorId) :
                new ObjectParameter("tipoEjecutorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEjecutoresAsociados", proyectoIdParameter, ejecutorIdParameter, usuarioParameter, tipoEjecutorIdParameter);
        }
    
        public virtual int uspPostEliminarEjecutorAsociado(Nullable<int> ejecutorAsociadoId, string usuario, ObjectParameter errorValidacionNegocio)
        {
            var ejecutorAsociadoIdParameter = ejecutorAsociadoId.HasValue ?
                new ObjectParameter("EjecutorAsociadoId", ejecutorAsociadoId) :
                new ObjectParameter("EjecutorAsociadoId", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostEliminarEjecutorAsociado", ejecutorAsociadoIdParameter, usuarioParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostFocalizacionGuardarPreguntasEnvioPoliticaSubDireccionAjustes(Nullable<System.Guid> idInstancia, Nullable<int> idProyecto, string idUsuarioDNP, Nullable<System.Guid> idNivel, Nullable<int> politicaId, string respuesta, string observacionPregunta, Nullable<int> envioPoliticaSubDireccionIdAgrupa, Nullable<int> preguntaId, ObjectParameter errorValidacionNegocio)
        {
            var idInstanciaParameter = idInstancia.HasValue ?
                new ObjectParameter("IdInstancia", idInstancia) :
                new ObjectParameter("IdInstancia", typeof(System.Guid));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            var idUsuarioDNPParameter = idUsuarioDNP != null ?
                new ObjectParameter("IdUsuarioDNP", idUsuarioDNP) :
                new ObjectParameter("IdUsuarioDNP", typeof(string));
    
            var idNivelParameter = idNivel.HasValue ?
                new ObjectParameter("IdNivel", idNivel) :
                new ObjectParameter("IdNivel", typeof(System.Guid));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("PoliticaId", politicaId) :
                new ObjectParameter("PoliticaId", typeof(int));
    
            var respuestaParameter = respuesta != null ?
                new ObjectParameter("Respuesta", respuesta) :
                new ObjectParameter("Respuesta", typeof(string));
    
            var observacionPreguntaParameter = observacionPregunta != null ?
                new ObjectParameter("ObservacionPregunta", observacionPregunta) :
                new ObjectParameter("ObservacionPregunta", typeof(string));
    
            var envioPoliticaSubDireccionIdAgrupaParameter = envioPoliticaSubDireccionIdAgrupa.HasValue ?
                new ObjectParameter("EnvioPoliticaSubDireccionIdAgrupa", envioPoliticaSubDireccionIdAgrupa) :
                new ObjectParameter("EnvioPoliticaSubDireccionIdAgrupa", typeof(int));
    
            var preguntaIdParameter = preguntaId.HasValue ?
                new ObjectParameter("PreguntaId", preguntaId) :
                new ObjectParameter("PreguntaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFocalizacionGuardarPreguntasEnvioPoliticaSubDireccionAjustes", idInstanciaParameter, idProyectoParameter, idUsuarioDNPParameter, idNivelParameter, politicaIdParameter, respuestaParameter, observacionPreguntaParameter, envioPoliticaSubDireccionIdAgrupaParameter, preguntaIdParameter, errorValidacionNegocio);
        }
    
        public virtual int uspPostFocalizacionGuardarRespuestaEnvioPoliticaSubDireccionAjustes(Nullable<int> id, Nullable<int> proyectoId, Nullable<int> politicaId, string idUsuarioDNP, ObjectParameter errorValidacionNegocio)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("ProyectoId", proyectoId) :
                new ObjectParameter("ProyectoId", typeof(int));
    
            var politicaIdParameter = politicaId.HasValue ?
                new ObjectParameter("PoliticaId", politicaId) :
                new ObjectParameter("PoliticaId", typeof(int));
    
            var idUsuarioDNPParameter = idUsuarioDNP != null ?
                new ObjectParameter("IdUsuarioDNP", idUsuarioDNP) :
                new ObjectParameter("IdUsuarioDNP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostFocalizacionGuardarRespuestaEnvioPoliticaSubDireccionAjustes", idParameter, proyectoIdParameter, politicaIdParameter, idUsuarioDNPParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<Nullable<int>> uspPostLiberacionVF(Nullable<int> tramiteProyectoId, Nullable<int> tramiteLiberarId, string creadoPor, Nullable<System.DateTime> vigenciaDesde, Nullable<System.DateTime> vigenciaHasta)
        {
            var tramiteProyectoIdParameter = tramiteProyectoId.HasValue ?
                new ObjectParameter("TramiteProyectoId", tramiteProyectoId) :
                new ObjectParameter("TramiteProyectoId", typeof(int));
    
            var tramiteLiberarIdParameter = tramiteLiberarId.HasValue ?
                new ObjectParameter("TramiteLiberarId", tramiteLiberarId) :
                new ObjectParameter("TramiteLiberarId", typeof(int));
    
            var creadoPorParameter = creadoPor != null ?
                new ObjectParameter("CreadoPor", creadoPor) :
                new ObjectParameter("CreadoPor", typeof(string));
    
            var vigenciaDesdeParameter = vigenciaDesde.HasValue ?
                new ObjectParameter("VigenciaDesde", vigenciaDesde) :
                new ObjectParameter("VigenciaDesde", typeof(System.DateTime));
    
            var vigenciaHastaParameter = vigenciaHasta.HasValue ?
                new ObjectParameter("VigenciaHasta", vigenciaHasta) :
                new ObjectParameter("VigenciaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspPostLiberacionVF", tramiteProyectoIdParameter, tramiteLiberarIdParameter, creadoPorParameter, vigenciaDesdeParameter, vigenciaHastaParameter);
        }
    
        public virtual ObjectResult<string> uspGetReporteActividades_JSON(string bPIN)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetReporteActividades_JSON", bPINParameter);
        }
    
        public virtual int UspPostEditarReporteProgramacionSeguimientoPeriodosValores(string usuario, string jsonNiveles, ObjectParameter errorValidacionNegocio)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var jsonNivelesParameter = jsonNiveles != null ?
                new ObjectParameter("jsonNiveles", jsonNiveles) :
                new ObjectParameter("jsonNiveles", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspPostEditarReporteProgramacionSeguimientoPeriodosValores", usuarioParameter, jsonNivelesParameter, errorValidacionNegocio);
        }
    
        public virtual ObjectResult<string> uspGetProgramarProductos_JSON(string bPIN, Nullable<System.Guid> instanciaId)
        {
            var bPINParameter = bPIN != null ?
                new ObjectParameter("BPIN", bPIN) :
                new ObjectParameter("BPIN", typeof(string));
    
            var instanciaIdParameter = instanciaId.HasValue ?
                new ObjectParameter("InstanciaId", instanciaId) :
                new ObjectParameter("InstanciaId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspGetProgramarProductos_JSON", bPINParameter, instanciaIdParameter);
        }
    
        public virtual int uspPostActualizaCampoRemitenteConcepto(Nullable<int> tramiteId, string usuarioDNPremitente)
        {
            var tramiteIdParameter = tramiteId.HasValue ?
                new ObjectParameter("tramiteId", tramiteId) :
                new ObjectParameter("tramiteId", typeof(int));
    
            var usuarioDNPremitenteParameter = usuarioDNPremitente != null ?
                new ObjectParameter("usuarioDNPremitente", usuarioDNPremitente) :
                new ObjectParameter("usuarioDNPremitente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPostActualizaCampoRemitenteConcepto", tramiteIdParameter, usuarioDNPremitenteParameter);
        }
    }
}
